[{"owner":{"account_id":43866,"reputation":159182,"user_id":128421,"user_type":"registered","accept_rate":50,"profile_image":"https:\/\/www.gravatar.com\/avatar\/71770d043c0f7e3c7bc5f74190015c26?s=256&d=identicon&r=PG","display_name":"the Tin Man","link":"https:\/\/stackoverflow.com\/users\/128421\/the-tin-man"},"is_accepted":false,"score":57,"last_activity_date":1300611895,"creation_date":1300611895,"answer_id":5367585,"question_id":5367164,"content_license":"CC BY-SA 2.5","body_markdown":"If you only have one occurrence of the target string you can use:\r\n\r\n    str[target] = &#39;&#39;\r\n\r\nor\r\n\r\n    str.sub(target, &#39;&#39;)\r\n\r\nIf you have multiple occurrences of target use:\r\n\r\n    str.gsub(target, &#39;&#39;)\r\n\r\nFor instance:\r\n\r\n    asdf = &#39;foo bar&#39;\r\n    asdf[&#39;bar&#39;] = &#39;&#39;\r\n    asdf #=&gt; &quot;foo &quot;\r\n\r\n    asdf = &#39;foo bar&#39;\r\n    asdf.sub(&#39;bar&#39;, &#39;&#39;) #=&gt; &quot;foo &quot;\r\n    asdf = asdf + asdf #=&gt; &quot;foo barfoo bar&quot;\r\n    asdf.gsub(&#39;bar&#39;, &#39;&#39;) #=&gt; &quot;foo foo &quot;\r\n\r\nIf you need to do in-place substitutions use the `&quot;!&quot;` versions of `gsub!` and `sub!`.","body":"<p>If you only have one occurrence of the target string you can use:<\/p>\n\n<pre><code>str[target] = ''\n<\/code><\/pre>\n\n<p>or<\/p>\n\n<pre><code>str.sub(target, '')\n<\/code><\/pre>\n\n<p>If you have multiple occurrences of target use:<\/p>\n\n<pre><code>str.gsub(target, '')\n<\/code><\/pre>\n\n<p>For instance:<\/p>\n\n<pre><code>asdf = 'foo bar'\nasdf['bar'] = ''\nasdf #=&gt; \"foo \"\n\nasdf = 'foo bar'\nasdf.sub('bar', '') #=&gt; \"foo \"\nasdf = asdf + asdf #=&gt; \"foo barfoo bar\"\nasdf.gsub('bar', '') #=&gt; \"foo foo \"\n<\/code><\/pre>\n\n<p>If you need to do in-place substitutions use the <code>\"!\"<\/code> versions of <code>gsub!<\/code> and <code>sub!<\/code>.<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":2975312,"reputation":1351,"user_id":2526476,"user_type":"registered","profile_image":"https:\/\/i.stack.imgur.com\/FQGh5.png?s=256&g=1","display_name":"Hoang Le","link":"https:\/\/stackoverflow.com\/users\/2526476\/hoang-le"},"is_accepted":false,"score":57,"last_activity_date":1437183320,"creation_date":1418891266,"answer_id":27542101,"question_id":1600526,"content_license":"CC BY-SA 3.0","body_markdown":"I think [Nokogiri gem][1] is also a good choice. It is very stable and has a huge contributing community.\r\n\r\nSamples:\r\n\r\n    a = Nokogiri::HTML.parse &quot;foo&amp;nbsp;b&amp;auml;r&quot;    \r\n    a.text \r\n    =&gt; &quot;foo&#160;b&#228;r&quot;\r\n\r\nor\r\n\r\n    a = Nokogiri::HTML.parse &quot;&amp;iexcl;I&amp;#39;m highly&amp;nbsp;annoyed with character references!&quot;\r\n    a.text\r\n    =&gt; &quot;&#161;I&#39;m highly&#160;annoyed with character references!&quot;\r\n\r\n\r\n  [1]: https:\/\/github.com\/sparklemotion\/nokogiri","body":"<p>I think <a href=\"https:\/\/github.com\/sparklemotion\/nokogiri\">Nokogiri gem<\/a> is also a good choice. It is very stable and has a huge contributing community.<\/p>\n\n<p>Samples:<\/p>\n\n<pre><code>a = Nokogiri::HTML.parse \"foo&amp;nbsp;b&amp;auml;r\"    \na.text \n=&gt; \"foo\u00a0b\u00e4r\"\n<\/code><\/pre>\n\n<p>or<\/p>\n\n<pre><code>a = Nokogiri::HTML.parse \"&amp;iexcl;I&amp;#39;m highly&amp;nbsp;annoyed with character references!\"\na.text\n=&gt; \"\u00a1I'm highly\u00a0annoyed with character references!\"\n<\/code><\/pre>\n","last_edit_date":1437183320.0,"community_owned_date":null},{"owner":{"account_id":51496,"reputation":671,"user_id":6879423,"user_type":"registered","profile_image":"https:\/\/lh3.googleusercontent.com\/-3v_dKFjvTDs\/AAAAAAAAAAI\/AAAAAAAAA0w\/l4NEWEvLFkY\/photo.jpg?sz=256","display_name":"Raymond Cox","link":"https:\/\/stackoverflow.com\/users\/6879423\/raymond-cox"},"is_accepted":false,"score":57,"last_activity_date":1484577641,"creation_date":1484577303,"answer_id":41678770,"question_id":39494672,"content_license":"CC BY-SA 3.0","body_markdown":"I had this same issue with **ImageMagick 7.0.4-4**. The proper fix is to install `imagemagick@6`. I found https:\/\/github.com\/Homebrew\/homebrew-core\/pull\/8756 useful if you accidentally deleted your `imagemagick@6` or never had it installed in the first place.","body":"<p>I had this same issue with <strong>ImageMagick 7.0.4-4<\/strong>. The proper fix is to install <code>imagemagick@6<\/code>. I found <a href=\"https:\/\/github.com\/Homebrew\/homebrew-core\/pull\/8756\">https:\/\/github.com\/Homebrew\/homebrew-core\/pull\/8756<\/a> useful if you accidentally deleted your <code>imagemagick@6<\/code> or never had it installed in the first place.<\/p>\n","last_edit_date":1484577641.0,"community_owned_date":null},{"owner":{"account_id":22528,"reputation":561,"user_id":55652,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/63f26c4a00677ea1e8b14d2a56efb104?s=256&d=identicon&r=PG","display_name":"robinluckey","link":"https:\/\/stackoverflow.com\/users\/55652\/robinluckey"},"is_accepted":false,"score":56,"last_activity_date":1246052935,"creation_date":1246052935,"answer_id":1051411,"question_id":376513,"content_license":"CC BY-SA 2.5","body_markdown":"IRB has a setting for this awful &quot;feature&quot;, which you can customize.\r\n\r\nCreate a file called `~\/.irbrc` that includes the following line:\r\n\r\n    IRB.conf[:BACK_TRACE_LIMIT] = 100\r\n\r\nThis will allow you to see 100 stack frames in `irb`, at least. I haven&#39;t been able to find an equivalent setting for the non-interactive runtime.\r\n\r\nDetailed information about IRB customization can be found in the [Pickaxe book](http:\/\/www.rubycentral.com\/book\/irb.html).","body":"<p>IRB has a setting for this awful \"feature\", which you can customize.<\/p>\n\n<p>Create a file called <code>~\/.irbrc<\/code> that includes the following line:<\/p>\n\n<pre><code>IRB.conf[:BACK_TRACE_LIMIT] = 100\n<\/code><\/pre>\n\n<p>This will allow you to see 100 stack frames in <code>irb<\/code>, at least. I haven't been able to find an equivalent setting for the non-interactive runtime.<\/p>\n\n<p>Detailed information about IRB customization can be found in the <a href=\"http:\/\/www.rubycentral.com\/book\/irb.html\" rel=\"noreferrer\">Pickaxe book<\/a>.<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":328195,"reputation":10746,"user_id":651016,"user_type":"registered","accept_rate":81,"profile_image":"https:\/\/www.gravatar.com\/avatar\/a5479099fc2ecfa9e8a41f4d697d6966?s=256&d=identicon&r=PG","display_name":"balanv","link":"https:\/\/stackoverflow.com\/users\/651016\/balanv"},"is_accepted":false,"score":56,"last_activity_date":1403468548,"creation_date":1340428790,"answer_id":11167089,"question_id":3614389,"content_license":"CC BY-SA 3.0","body_markdown":"We can use slice to do this:\r\n\r\n    val = &quot;abc&quot;\r\n     =&gt; &quot;abc&quot; \r\n    val.slice!(0)\r\n     =&gt; &quot;a&quot; \r\n    val\r\n     =&gt; &quot;bc&quot; \r\n\r\nUsing `slice!` we can delete any character by specifying its index.","body":"<p>We can use slice to do this:<\/p>\n\n<pre><code>val = \"abc\"\n =&gt; \"abc\" \nval.slice!(0)\n =&gt; \"a\" \nval\n =&gt; \"bc\" \n<\/code><\/pre>\n\n<p>Using <code>slice!<\/code> we can delete any character by specifying its index.<\/p>\n","last_edit_date":1403468548.0,"community_owned_date":null},{"owner":{"account_id":35478,"reputation":48864,"user_id":100478,"user_type":"registered","accept_rate":83,"profile_image":"https:\/\/www.gravatar.com\/avatar\/7f819832e1487a75efea2149a0a952d6?s=256&d=identicon&r=PG","display_name":"BJ Homer","link":"https:\/\/stackoverflow.com\/users\/100478\/bj-homer"},"is_accepted":false,"score":55,"last_activity_date":1386365177,"creation_date":1243466901,"answer_id":918479,"question_id":918449,"content_license":"CC BY-SA 3.0","body_markdown":"The splat operator unpacks an array passed to a function so that each element is sent to the function as an individual parameter.\r\n\r\nA simple example:\r\n\r\n    &gt;&gt; def func(a, b, c)\r\n    &gt;&gt;   puts a, b, c\r\n    &gt;&gt; end\r\n    =&gt; nil\r\n    \r\n    &gt;&gt; func(1, 2, 3)  #we can call func with three parameters\r\n    1\r\n    2\r\n    3\r\n    =&gt; nil\r\n    \r\n    &gt;&gt; list = [1, 2, 3]\r\n    =&gt; [1, 2, 3]\r\n\r\n    &gt;&gt; func(list) #We CAN&#39;T call func with an array, even though it has three objects\r\n    ArgumentError: wrong number of arguments (1 for 3)\r\n    \tfrom (irb):12:in &#39;func&#39;\r\n    \tfrom (irb):12\r\n\r\n    &gt;&gt; func(*list) #But we CAN call func with an unpacked array.\r\n    1\r\n    2\r\n    3\r\n    =&gt; nil\r\n\r\nThat&#39;s it!\r\n","body":"<p>The splat operator unpacks an array passed to a function so that each element is sent to the function as an individual parameter.<\/p>\n\n<p>A simple example:<\/p>\n\n<pre><code>&gt;&gt; def func(a, b, c)\n&gt;&gt;   puts a, b, c\n&gt;&gt; end\n=&gt; nil\n\n&gt;&gt; func(1, 2, 3)  #we can call func with three parameters\n1\n2\n3\n=&gt; nil\n\n&gt;&gt; list = [1, 2, 3]\n=&gt; [1, 2, 3]\n\n&gt;&gt; func(list) #We CAN'T call func with an array, even though it has three objects\nArgumentError: wrong number of arguments (1 for 3)\n    from (irb):12:in 'func'\n    from (irb):12\n\n&gt;&gt; func(*list) #But we CAN call func with an unpacked array.\n1\n2\n3\n=&gt; nil\n<\/code><\/pre>\n\n<p>That's it!<\/p>\n","last_edit_date":1386365177.0,"community_owned_date":null},{"owner":{"account_id":254625,"reputation":11900,"user_id":534150,"user_type":"registered","accept_rate":81,"profile_image":"https:\/\/www.gravatar.com\/avatar\/bd33b5aaf0eb48d67a8145732d8f61a9?s=256&d=identicon&r=PG","display_name":"Arthur Neves","link":"https:\/\/stackoverflow.com\/users\/534150\/arthur-neves"},"is_accepted":false,"score":55,"last_activity_date":1324014749,"creation_date":1324014749,"answer_id":8530338,"question_id":420352,"content_license":"CC BY-SA 3.0","body_markdown":"new way to do it in rails 3.1 is `SomeModel.limit(5).order(&#39;id desc&#39;)`","body":"<p>new way to do it in rails 3.1 is <code>SomeModel.limit(5).order('id desc')<\/code><\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":1292922,"reputation":4015,"user_id":1244649,"user_type":"registered","accept_rate":100,"profile_image":"https:\/\/www.gravatar.com\/avatar\/09db4c0988622be60ac860f1bc8d3fc1?s=256&d=identicon&r=PG","display_name":"Hulvej","link":"https:\/\/stackoverflow.com\/users\/1244649\/hulvej"},"is_accepted":false,"score":55,"last_activity_date":1371160181,"creation_date":1371160181,"answer_id":17097746,"question_id":14355165,"content_license":"CC BY-SA 3.0","body_markdown":"update gem to the newest release using \r\n\r\n`sudo gem update --system` and it should work a bit faster","body":"<p>update gem to the newest release using <\/p>\n\n<p><code>sudo gem update --system<\/code> and it should work a bit faster<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":1027185,"reputation":4338,"user_id":1036242,"user_type":"registered","accept_rate":33,"profile_image":"https:\/\/www.gravatar.com\/avatar\/8602754aee7371a7cddb975d549a50d9?s=256&d=identicon&r=PG","display_name":"Anand Chavan","link":"https:\/\/stackoverflow.com\/users\/1036242\/anand-chavan"},"is_accepted":false,"score":55,"last_activity_date":1460643335,"creation_date":1460643335,"answer_id":36625875,"question_id":19673714,"content_license":"CC BY-SA 3.0","body_markdown":"I tried the solution listed above command which looks very fine for installing individual gem, but for bundler users - you should use bundle config\r\n\r\nUse \r\n\r\n    bundle config build.libv8 --with-system-v8 \r\n\r\nand\r\n\r\n    bundle config build.therubyracer --with-system-v8\r\n\r\nto configure bundler to take the parameters to be used while installing specific gem","body":"<p>I tried the solution listed above command which looks very fine for installing individual gem, but for bundler users - you should use bundle config<\/p>\n\n<p>Use <\/p>\n\n<pre><code>bundle config build.libv8 --with-system-v8 \n<\/code><\/pre>\n\n<p>and<\/p>\n\n<pre><code>bundle config build.therubyracer --with-system-v8\n<\/code><\/pre>\n\n<p>to configure bundler to take the parameters to be used while installing specific gem<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":913256,"reputation":28357,"user_id":2564200,"user_type":"registered","accept_rate":83,"profile_image":"https:\/\/www.gravatar.com\/avatar\/fce393397dd31e409a07c3e52f16d710?s=256&d=identicon&r=PG","display_name":"Santhosh","link":"https:\/\/stackoverflow.com\/users\/2564200\/santhosh"},"is_accepted":false,"score":55,"last_activity_date":1540802405,"creation_date":1483014855,"answer_id":41379844,"question_id":1341271,"content_license":"CC BY-SA 4.0","body_markdown":"Ruby versions &gt;= 2.4 has an [Enumerable#sum][1] method. \r\n\r\nAnd to get floating point average, you can use [Integer#fdiv][2]\r\n\r\n    arr = [0,4,8,2,5,0,2,6]\r\n\r\n    arr.sum.fdiv(arr.size)\r\n    # =&gt; 3.375\r\n\r\nFor older versions:\r\n\r\n    arr.reduce(:+).fdiv(arr.size)\r\n    # =&gt; 3.375\r\n\r\n  [1]: http:\/\/ruby-doc.org\/core-2.4.0\/Enumerable.html#method-i-sum\r\n  [2]: https:\/\/ruby-doc.org\/core-2.4.0\/Integer.html#method-i-fdiv","body":"<p>Ruby versions >= 2.4 has an <a href=\"http:\/\/ruby-doc.org\/core-2.4.0\/Enumerable.html#method-i-sum\" rel=\"noreferrer\">Enumerable#sum<\/a> method. <\/p>\n\n<p>And to get floating point average, you can use <a href=\"https:\/\/ruby-doc.org\/core-2.4.0\/Integer.html#method-i-fdiv\" rel=\"noreferrer\">Integer#fdiv<\/a><\/p>\n\n<pre><code>arr = [0,4,8,2,5,0,2,6]\n\narr.sum.fdiv(arr.size)\n# =&gt; 3.375\n<\/code><\/pre>\n\n<p>For older versions:<\/p>\n\n<pre><code>arr.reduce(:+).fdiv(arr.size)\n# =&gt; 3.375\n<\/code><\/pre>\n","last_edit_date":1540802405.0,"community_owned_date":null},{"owner":{"account_id":5050236,"reputation":11665,"user_id":4055042,"user_type":"registered","accept_rate":76,"profile_image":"https:\/\/www.gravatar.com\/avatar\/b9d538e8558c68a996faafeb11e795a9?s=256&d=identicon&r=PG&f=y&so-version=2","display_name":"SRack","link":"https:\/\/stackoverflow.com\/users\/4055042\/srack"},"is_accepted":false,"score":55,"last_activity_date":1584700313,"creation_date":1509033446,"answer_id":46958806,"question_id":3614389,"content_license":"CC BY-SA 4.0","body_markdown":"## Ruby 2.5+\r\n\r\nAs of Ruby 2.5 you can use `delete_prefix` or `delete_prefix!` to achieve this in a readable manner.\r\n\r\nIn this case `&quot;[12,23,987,43&quot;.delete_prefix(&quot;[&quot;)`.\r\n\r\nMore info here: \r\n\r\n- [Official docs](https:\/\/ruby-doc.org\/core-2.5.1\/String.html#method-i-delete_prefix)\r\n\r\n- https:\/\/blog.jetbrains.com\/ruby\/2017\/10\/10-new-features-in-ruby-2-5\/\r\n\r\n- https:\/\/bugs.ruby-lang.org\/issues\/12694\r\n\r\n```\r\n&#39;invisible&#39;.delete_prefix(&#39;in&#39;) #=&gt; &quot;visible&quot;\r\n&#39;pink&#39;.delete_prefix(&#39;in&#39;) #=&gt; &quot;pink&quot;\r\n``` \r\n\r\nN.B. you can also use this to remove items from the end of a string with `delete_suffix` and `delete_suffix!`\r\n\r\n    &#39;worked&#39;.delete_suffix(&#39;ed&#39;) #=&gt; &quot;work&quot;\r\n    &#39;medical&#39;.delete_suffix(&#39;ed&#39;) #=&gt; &quot;medical&quot;\r\n\r\n- [Docs](https:\/\/ruby-doc.org\/core-2.5.1\/String.html#method-i-delete_prefix-21)\r\n- https:\/\/bugs.ruby-lang.org\/issues\/13665\r\n\r\nEdit:\r\n\r\nUsing the Tin Man&#39;s benchmark setup, it looks pretty quick too (under the last two entries `delete_p` and `delete_p!`). Doesn&#39;t _quite_ pip the previous faves for speed, though is very readable.\r\n\r\n    2.5.0\r\n                  user     system      total        real\r\n    [0]       0.174766   0.000489   0.175255 (  0.180207)\r\n    [\/^.\/]    0.318038   0.000510   0.318548 (  0.323679)\r\n    [\/^\\[\/]   0.372645   0.001134   0.373779 (  0.379029)\r\n    sub+      0.460295   0.001510   0.461805 (  0.467279)\r\n    sub       0.498351   0.001534   0.499885 (  0.505729)\r\n    gsub      1.669837   0.005141   1.674978 (  1.682853)\r\n    [1..-1]   0.199840   0.000976   0.200816 (  0.205889)\r\n    slice     0.279661   0.000859   0.280520 (  0.285661)\r\n    length    0.268362   0.000310   0.268672 (  0.273829)\r\n    eat!      0.341715   0.000524   0.342239 (  0.347097)\r\n    reverse   0.335301   0.000588   0.335889 (  0.340965)\r\n    delete_p  0.222297   0.000832   0.223129 (  0.228455)\r\n    delete_p!  0.225798   0.000747   0.226545 (  0.231745)","body":"<h2>Ruby 2.5+<\/h2>\n\n<p>As of Ruby 2.5 you can use <code>delete_prefix<\/code> or <code>delete_prefix!<\/code> to achieve this in a readable manner.<\/p>\n\n<p>In this case <code>\"[12,23,987,43\".delete_prefix(\"[\")<\/code>.<\/p>\n\n<p>More info here: <\/p>\n\n<ul>\n<li><p><a href=\"https:\/\/ruby-doc.org\/core-2.5.1\/String.html#method-i-delete_prefix\" rel=\"noreferrer\">Official docs<\/a><\/p><\/li>\n<li><p><a href=\"https:\/\/blog.jetbrains.com\/ruby\/2017\/10\/10-new-features-in-ruby-2-5\/\" rel=\"noreferrer\">https:\/\/blog.jetbrains.com\/ruby\/2017\/10\/10-new-features-in-ruby-2-5\/<\/a><\/p><\/li>\n<li><p><a href=\"https:\/\/bugs.ruby-lang.org\/issues\/12694\" rel=\"noreferrer\">https:\/\/bugs.ruby-lang.org\/issues\/12694<\/a><\/p><\/li>\n<\/ul>\n\n<pre><code>'invisible'.delete_prefix('in') #=&gt; \"visible\"\n'pink'.delete_prefix('in') #=&gt; \"pink\"\n<\/code><\/pre>\n\n<p>N.B. you can also use this to remove items from the end of a string with <code>delete_suffix<\/code> and <code>delete_suffix!<\/code><\/p>\n\n<pre><code>'worked'.delete_suffix('ed') #=&gt; \"work\"\n'medical'.delete_suffix('ed') #=&gt; \"medical\"\n<\/code><\/pre>\n\n<ul>\n<li><a href=\"https:\/\/ruby-doc.org\/core-2.5.1\/String.html#method-i-delete_prefix-21\" rel=\"noreferrer\">Docs<\/a><\/li>\n<li><a href=\"https:\/\/bugs.ruby-lang.org\/issues\/13665\" rel=\"noreferrer\">https:\/\/bugs.ruby-lang.org\/issues\/13665<\/a><\/li>\n<\/ul>\n\n<p>Edit:<\/p>\n\n<p>Using the Tin Man's benchmark setup, it looks pretty quick too (under the last two entries <code>delete_p<\/code> and <code>delete_p!<\/code>). Doesn't <em>quite<\/em> pip the previous faves for speed, though is very readable.<\/p>\n\n<pre><code>2.5.0\n              user     system      total        real\n[0]       0.174766   0.000489   0.175255 (  0.180207)\n[\/^.\/]    0.318038   0.000510   0.318548 (  0.323679)\n[\/^\\[\/]   0.372645   0.001134   0.373779 (  0.379029)\nsub+      0.460295   0.001510   0.461805 (  0.467279)\nsub       0.498351   0.001534   0.499885 (  0.505729)\ngsub      1.669837   0.005141   1.674978 (  1.682853)\n[1..-1]   0.199840   0.000976   0.200816 (  0.205889)\nslice     0.279661   0.000859   0.280520 (  0.285661)\nlength    0.268362   0.000310   0.268672 (  0.273829)\neat!      0.341715   0.000524   0.342239 (  0.347097)\nreverse   0.335301   0.000588   0.335889 (  0.340965)\ndelete_p  0.222297   0.000832   0.223129 (  0.228455)\ndelete_p!  0.225798   0.000747   0.226545 (  0.231745)\n<\/code><\/pre>\n","last_edit_date":1584700313.0,"community_owned_date":null},{"owner":{"account_id":1969290,"reputation":2997,"user_id":1768710,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/e25e2b361ec6a24d75d18e5e70d9e9de?s=256&d=identicon&r=PG","display_name":"aloucas","link":"https:\/\/stackoverflow.com\/users\/1768710\/aloucas"},"is_accepted":false,"score":54,"last_activity_date":1456094604,"creation_date":1456094604,"answer_id":35543086,"question_id":6395288,"content_license":"CC BY-SA 3.0","body_markdown":"There is a difference between single `&#39;&#39;` and double quotes `&quot;&quot;` in Ruby in terms of what gets to be evaluated to a string.\r\n\r\nInitially, I would like to clarify that in **the literal form of a string** whatever is between **single** or **double** quotes gets evaluated as a string object, which is an instance of the Ruby String class.\r\n\r\nTherefore, `&#39;stackoverflow&#39;` and `&quot;stackoverflow&quot;` both will evaluate instances of String class **with no difference at all**.\r\n\r\nThe difference\r\n---------------\r\n\r\nThe essential difference between the two literal forms of strings (single or double quotes) ***is that double quotes allow for escape sequences while single quotes do not!***\r\n\r\nA string literal created by single quotes does not support **string interpollation** and **does not escape sequences.**\r\n\r\nA neat example is:\r\n\r\n    &quot;\\n&quot; # will be interpreted as a new line\r\n\r\nwhereas\r\n\r\n    &#39;\\n&#39; # will display the actual escape sequence to the user\r\n\r\nInterpolating with single quotes does not work at all:\r\n\r\n    &#39;#{Time.now}&#39;\r\n    =&gt; &quot;\\#{Time.now}&quot; # which is not what you want..\r\n\r\nBest practice\r\n-------------\r\n\r\nAs most of the Ruby Linters suggest **use single quote literals for your strings** and *go for the double ones in the case of interpolation\/escaping sequences.*","body":"<p>There is a difference between single <code>''<\/code> and double quotes <code>\"\"<\/code> in Ruby in terms of what gets to be evaluated to a string.<\/p>\n\n<p>Initially, I would like to clarify that in <strong>the literal form of a string<\/strong> whatever is between <strong>single<\/strong> or <strong>double<\/strong> quotes gets evaluated as a string object, which is an instance of the Ruby String class.<\/p>\n\n<p>Therefore, <code>'stackoverflow'<\/code> and <code>\"stackoverflow\"<\/code> both will evaluate instances of String class <strong>with no difference at all<\/strong>.<\/p>\n\n<h2>The difference<\/h2>\n\n<p>The essential difference between the two literal forms of strings (single or double quotes) <strong><em>is that double quotes allow for escape sequences while single quotes do not!<\/em><\/strong><\/p>\n\n<p>A string literal created by single quotes does not support <strong>string interpollation<\/strong> and <strong>does not escape sequences.<\/strong><\/p>\n\n<p>A neat example is:<\/p>\n\n<pre><code>\"\\n\" # will be interpreted as a new line\n<\/code><\/pre>\n\n<p>whereas<\/p>\n\n<pre><code>'\\n' # will display the actual escape sequence to the user\n<\/code><\/pre>\n\n<p>Interpolating with single quotes does not work at all:<\/p>\n\n<pre><code>'#{Time.now}'\n=&gt; \"\\#{Time.now}\" # which is not what you want..\n<\/code><\/pre>\n\n<h2>Best practice<\/h2>\n\n<p>As most of the Ruby Linters suggest <strong>use single quote literals for your strings<\/strong> and <em>go for the double ones in the case of interpolation\/escaping sequences.<\/em><\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":104672,"reputation":4695,"user_id":279707,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/8bb6b72b851fcd133490fc9cc28e9505?s=256&d=identicon&r=PG","display_name":"Amin Ariana","link":"https:\/\/stackoverflow.com\/users\/279707\/amin-ariana"},"is_accepted":false,"score":53,"last_activity_date":1501094655,"creation_date":1501093704,"answer_id":45334818,"question_id":420352,"content_license":"CC BY-SA 3.0","body_markdown":"# For Rails 5 (and likely Rails 4)\r\n\r\n### Bad:\r\n    Something.last(5)\r\n\r\nbecause:\r\n\r\n    Something.last(5).class\r\n    =&gt; Array\r\n\r\nso:\r\n\r\n    Something.last(50000).count\r\n\r\nwill likely blow up your memory or take forever.\r\n\r\n### Good approach:\r\n\r\n    Something.limit(5).order(&#39;id desc&#39;)\r\n\r\nbecause:\r\n\r\n    Something.limit(5).order(&#39;id desc&#39;).class\r\n    =&gt; Image::ActiveRecord_Relation\r\n\r\n    Something.limit(5).order(&#39;id desc&#39;).to_sql\r\n    =&gt; &quot;SELECT  \\&quot;somethings\\&quot;.* FROM \\&quot;somethings\\&quot; ORDER BY id desc LIMIT 5&quot;\r\n\r\nThe latter is an unevaluated scope. You can chain it, or convert it to an array via `.to_a`. So:\r\n\r\n    Something.limit(50000).order(&#39;id desc&#39;).count\r\n\r\n... takes a second.\r\n","body":"<h1>For Rails 5 (and likely Rails 4)<\/h1>\n\n<h3>Bad:<\/h3>\n\n<pre><code>Something.last(5)\n<\/code><\/pre>\n\n<p>because:<\/p>\n\n<pre><code>Something.last(5).class\n=&gt; Array\n<\/code><\/pre>\n\n<p>so:<\/p>\n\n<pre><code>Something.last(50000).count\n<\/code><\/pre>\n\n<p>will likely blow up your memory or take forever.<\/p>\n\n<h3>Good approach:<\/h3>\n\n<pre><code>Something.limit(5).order('id desc')\n<\/code><\/pre>\n\n<p>because:<\/p>\n\n<pre><code>Something.limit(5).order('id desc').class\n=&gt; Image::ActiveRecord_Relation\n\nSomething.limit(5).order('id desc').to_sql\n=&gt; \"SELECT  \\\"somethings\\\".* FROM \\\"somethings\\\" ORDER BY id desc LIMIT 5\"\n<\/code><\/pre>\n\n<p>The latter is an unevaluated scope. You can chain it, or convert it to an array via <code>.to_a<\/code>. So:<\/p>\n\n<pre><code>Something.limit(50000).order('id desc').count\n<\/code><\/pre>\n\n<p>... takes a second.<\/p>\n","last_edit_date":1501094655.0,"community_owned_date":null},{"owner":{"account_id":3157,"reputation":15988,"user_id":4494,"user_type":"registered","accept_rate":50,"profile_image":"https:\/\/www.gravatar.com\/avatar\/5981dd7d253ecf61590502eeb183ee7b?s=256&d=identicon&r=PG","display_name":"Matthias Winkelmann","link":"https:\/\/stackoverflow.com\/users\/4494\/matthias-winkelmann"},"is_accepted":false,"score":52,"last_activity_date":1344158398,"creation_date":1223839782,"answer_id":195894,"question_id":195740,"content_license":"CC BY-SA 3.0","body_markdown":"I&#39;ve written this, but have to check the existing methods mentioned to see if they are better.\r\n\r\n    module PrettyDate\r\n      def to_pretty\r\n        a = (Time.now-self).to_i\r\n    \r\n        case a\r\n          when 0 then &#39;just now&#39;\r\n          when 1 then &#39;a second ago&#39;\r\n          when 2..59 then a.to_s+&#39; seconds ago&#39; \r\n          when 60..119 then &#39;a minute ago&#39; #120 = 2 minutes\r\n          when 120..3540 then (a\/60).to_i.to_s+&#39; minutes ago&#39;\r\n          when 3541..7100 then &#39;an hour ago&#39; # 3600 = 1 hour\r\n          when 7101..82800 then ((a+99)\/3600).to_i.to_s+&#39; hours ago&#39; \r\n          when 82801..172000 then &#39;a day ago&#39; # 86400 = 1 day\r\n          when 172001..518400 then ((a+800)\/(60*60*24)).to_i.to_s+&#39; days ago&#39;\r\n          when 518400..1036800 then &#39;a week ago&#39;\r\n          else ((a+180000)\/(60*60*24*7)).to_i.to_s+&#39; weeks ago&#39;\r\n        end\r\n      end\r\n    end\r\n    \r\n    Time.send :include, PrettyDate","body":"<p>I've written this, but have to check the existing methods mentioned to see if they are better.<\/p>\n\n<pre><code>module PrettyDate\n  def to_pretty\n    a = (Time.now-self).to_i\n\n    case a\n      when 0 then 'just now'\n      when 1 then 'a second ago'\n      when 2..59 then a.to_s+' seconds ago' \n      when 60..119 then 'a minute ago' #120 = 2 minutes\n      when 120..3540 then (a\/60).to_i.to_s+' minutes ago'\n      when 3541..7100 then 'an hour ago' # 3600 = 1 hour\n      when 7101..82800 then ((a+99)\/3600).to_i.to_s+' hours ago' \n      when 82801..172000 then 'a day ago' # 86400 = 1 day\n      when 172001..518400 then ((a+800)\/(60*60*24)).to_i.to_s+' days ago'\n      when 518400..1036800 then 'a week ago'\n      else ((a+180000)\/(60*60*24*7)).to_i.to_s+' weeks ago'\n    end\n  end\nend\n\nTime.send :include, PrettyDate\n<\/code><\/pre>\n","last_edit_date":1344158398.0,"community_owned_date":null},{"owner":{"account_id":122716,"reputation":36837,"user_id":316700,"user_type":"registered","accept_rate":80,"profile_image":"https:\/\/www.gravatar.com\/avatar\/6f952bee7570a3db2ecba5b06c0062b3?s=256&d=identicon&r=PG","display_name":"fguillen","link":"https:\/\/stackoverflow.com\/users\/316700\/fguillen"},"is_accepted":false,"score":52,"last_activity_date":1329391692,"creation_date":1329391692,"answer_id":9310490,"question_id":5285711,"content_license":"CC BY-SA 3.0","body_markdown":"This is one of the things that bother me about the `string name definition` in tests.\r\n\r\nWhen you have:\r\n\r\n    def test_my_test\r\n    end\r\n\r\nyou always know how your test is named so you can execute it like this:\r\n\r\n    ruby my_test -n test_my_test\r\n\r\nBut when you have something like:\r\n\r\n    it &quot;my test&quot; do\r\n    end\r\n\r\nyou are never sure how this test is really named internally so you can not use the `-n` option just directly.\r\n\r\nTo know how this test is named internally you only have an option: execute the whole file to try to figure out looking in the logs.\r\n\r\nMy workaround is (temporally) add something to the test name very unique like:\r\n\r\n    it &quot;my test xxx&quot; do\r\n    end\r\n\r\nand then use the _RegEx_ version of the &#39;-n&#39; parameter like:\r\n\r\n    ruby my_test.rb -n \/xxx\/\r\n","body":"<p>This is one of the things that bother me about the <code>string name definition<\/code> in tests.<\/p>\n\n<p>When you have:<\/p>\n\n<pre><code>def test_my_test\nend\n<\/code><\/pre>\n\n<p>you always know how your test is named so you can execute it like this:<\/p>\n\n<pre><code>ruby my_test -n test_my_test\n<\/code><\/pre>\n\n<p>But when you have something like:<\/p>\n\n<pre><code>it \"my test\" do\nend\n<\/code><\/pre>\n\n<p>you are never sure how this test is really named internally so you can not use the <code>-n<\/code> option just directly.<\/p>\n\n<p>To know how this test is named internally you only have an option: execute the whole file to try to figure out looking in the logs.<\/p>\n\n<p>My workaround is (temporally) add something to the test name very unique like:<\/p>\n\n<pre><code>it \"my test xxx\" do\nend\n<\/code><\/pre>\n\n<p>and then use the <em>RegEx<\/em> version of the '-n' parameter like:<\/p>\n\n<pre><code>ruby my_test.rb -n \/xxx\/\n<\/code><\/pre>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":271410,"reputation":592,"user_id":561917,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/f607656a5e9aa160e430314a941b12d3?s=256&d=identicon&r=PG","display_name":"Tatsuro Baba","link":"https:\/\/stackoverflow.com\/users\/561917\/tatsuro-baba"},"is_accepted":false,"score":51,"last_activity_date":1506471219,"creation_date":1296087383,"answer_id":4811705,"question_id":4811668,"content_license":"CC BY-SA 3.0","body_markdown":"The two answers are good.\r\nAnd I also suggest you a similar method:\r\n\r\n    &lt;% @images.each.with_index do |page, index| %&gt;\r\n    &lt;% end %&gt;\r\n\r\nYou might not see the difference between this and the accepted answer. Let me direct your eyes to these method calls: `.each.with_index` see how it&#39;s `.each` and then `.with_index`.","body":"<p>The two answers are good.\nAnd I also suggest you a similar method:<\/p>\n\n<pre><code>&lt;% @images.each.with_index do |page, index| %&gt;\n&lt;% end %&gt;\n<\/code><\/pre>\n\n<p>You might not see the difference between this and the accepted answer. Let me direct your eyes to these method calls: <code>.each.with_index<\/code> see how it's <code>.each<\/code> and then <code>.with_index<\/code>.<\/p>\n","last_edit_date":1506471219.0,"community_owned_date":null},{"owner":{"account_id":54548,"reputation":64163,"user_id":163203,"user_type":"registered","accept_rate":75,"profile_image":"https:\/\/www.gravatar.com\/avatar\/354dbc60f05bbc3ea25cdf2c14540caf?s=256&d=identicon&r=PG","display_name":"Harish Shetty","link":"https:\/\/stackoverflow.com\/users\/163203\/harish-shetty"},"is_accepted":false,"score":51,"last_activity_date":1582023000,"creation_date":1330644720,"answer_id":9525859,"question_id":9524457,"content_license":"CC BY-SA 4.0","body_markdown":"If you use Rails, Use `classify`. It handles edge cases well. \r\n\r\n \r\n\r\n    &quot;app_user&quot;.classify # =&gt; AppUser\r\n    &quot;user_links&quot;.classify   # =&gt; UserLink\r\n\r\n\r\n**Note:**\r\n\r\nThis answer is specific to the description given in the question(it is not specific to the question title). If one is trying to convert a string to camel-case they should use [Sergio][1]&#39;s answer. The questioner states that he wants to convert `app_user` to `AppUser` (not `App_user`), hence this answer.. \r\n\r\n\r\n  [1]: https:\/\/stackoverflow.com\/a\/9524521\/163203","body":"<p>If you use Rails, Use <code>classify<\/code>. It handles edge cases well. <\/p>\n\n<pre><code>\"app_user\".classify # =&gt; AppUser\n\"user_links\".classify   # =&gt; UserLink\n<\/code><\/pre>\n\n<p><strong>Note:<\/strong><\/p>\n\n<p>This answer is specific to the description given in the question(it is not specific to the question title). If one is trying to convert a string to camel-case they should use <a href=\"https:\/\/stackoverflow.com\/a\/9524521\/163203\">Sergio<\/a>'s answer. The questioner states that he wants to convert <code>app_user<\/code> to <code>AppUser<\/code> (not <code>App_user<\/code>), hence this answer.. <\/p>\n","last_edit_date":1582023000.0,"community_owned_date":null},{"owner":{"account_id":1132145,"reputation":3506,"user_id":1930295,"user_type":"registered","accept_rate":25,"profile_image":"https:\/\/www.gravatar.com\/avatar\/128cc4033ec598b63fa96deb33e26131?s=256&d=identicon&r=PG","display_name":"danielricecodes","link":"https:\/\/stackoverflow.com\/users\/1930295\/danielricecodes"},"is_accepted":false,"score":51,"last_activity_date":1401979793,"creation_date":1398114291,"answer_id":23206010,"question_id":23180650,"content_license":"CC BY-SA 3.0","body_markdown":"Add `config\/secrets.yml` to version control and deploy again.  You might need to remove a line from `.gitignore` so that you can commit the file.  \r\n\r\nI had this exact same issue and it just turned out that the boilerplate `.gitignore` Github created for my Rails application included `config\/secrets.yml`.","body":"<p>Add <code>config\/secrets.yml<\/code> to version control and deploy again.  You might need to remove a line from <code>.gitignore<\/code> so that you can commit the file.  <\/p>\n\n<p>I had this exact same issue and it just turned out that the boilerplate <code>.gitignore<\/code> Github created for my Rails application included <code>config\/secrets.yml<\/code>.<\/p>\n","last_edit_date":1401979793.0,"community_owned_date":null},{"owner":{"account_id":908,"reputation":6396,"user_id":1191,"user_type":"registered","accept_rate":80,"profile_image":"https:\/\/www.gravatar.com\/avatar\/8d0371460c58706c26641f3d578145aa?s=256&d=identicon&r=PG","display_name":"erik","link":"https:\/\/stackoverflow.com\/users\/1191\/erik"},"is_accepted":false,"score":50,"last_activity_date":1249393981,"creation_date":1249393981,"answer_id":1227669,"question_id":1227571,"content_license":"CC BY-SA 2.5","body_markdown":"    hash.keys.sort.each do |key|\r\n      puts &quot;#{key}-----&quot;\r\n      hash[key].each { |val| puts val }\r\n    end","body":"<pre><code>hash.keys.sort.each do |key|\n  puts \"#{key}-----\"\n  hash[key].each { |val| puts val }\nend\n<\/code><\/pre>\n","last_edit_date":null,"community_owned_date":1249393981.0},{"owner":{"account_id":29910,"reputation":113530,"user_id":81179,"user_type":"registered","accept_rate":100,"profile_image":"https:\/\/www.gravatar.com\/avatar\/7129e23c041e21e15caf3ca6317a0dac?s=256&d=identicon&r=PG&f=y&so-version=2","display_name":"ChristopheD","link":"https:\/\/stackoverflow.com\/users\/81179\/christophed"},"is_accepted":false,"score":50,"last_activity_date":1494339042,"creation_date":1279661702,"answer_id":3294560,"question_id":3294509,"content_license":"CC BY-SA 3.0","body_markdown":"See &quot;[The Evils of the For Loop][1]&quot; for a good explanation (there&#39;s one small difference considering variable scoping). \r\n\r\nUsing `each` is [considered more idiomatic][2] use of Ruby.\r\n\r\n  [1]: http:\/\/graysoftinc.com\/early-steps\/the-evils-of-the-for-loop\r\n  [2]: https:\/\/github.com\/bbatsov\/ruby-style-guide#no-for-loops","body":"<p>See \"<a href=\"http:\/\/graysoftinc.com\/early-steps\/the-evils-of-the-for-loop\" rel=\"noreferrer\">The Evils of the For Loop<\/a>\" for a good explanation (there's one small difference considering variable scoping). <\/p>\n\n<p>Using <code>each<\/code> is <a href=\"https:\/\/github.com\/bbatsov\/ruby-style-guide#no-for-loops\" rel=\"noreferrer\">considered more idiomatic<\/a> use of Ruby.<\/p>\n","last_edit_date":1494339042.0,"community_owned_date":null},{"owner":{"account_id":87653,"reputation":122720,"user_id":242933,"user_type":"registered","accept_rate":53,"profile_image":"https:\/\/www.gravatar.com\/avatar\/7e6e0e2b73358e47e0b7f83f8111f75b?s=256&d=identicon&r=PG","display_name":"ma11hew28","link":"https:\/\/stackoverflow.com\/users\/242933\/ma11hew28"},"is_accepted":false,"score":50,"last_activity_date":1489098050,"creation_date":1370979346,"answer_id":17052297,"question_id":1085218,"content_license":"CC BY-SA 3.0","body_markdown":"You can also use [`Dir::exist?`][1] like so:\r\n\r\n    Dir.exist?(&#39;Directory Name&#39;)\r\n\r\n&gt;Returns `true` if the &#39;Directory Name&#39; is a directory, `false` otherwise.&lt;sup&gt;[1]&lt;\/sup&gt;\r\n\r\n\r\n  [1]: http:\/\/ruby-doc.org\/core-2.4.0\/Dir.html#method-c-exist-3F","body":"<p>You can also use <a href=\"http:\/\/ruby-doc.org\/core-2.4.0\/Dir.html#method-c-exist-3F\" rel=\"noreferrer\"><code>Dir::exist?<\/code><\/a> like so:<\/p>\n\n<pre><code>Dir.exist?('Directory Name')\n<\/code><\/pre>\n\n<blockquote>\n  <p>Returns <code>true<\/code> if the 'Directory Name' is a directory, <code>false<\/code> otherwise.<sup><a href=\"http:\/\/ruby-doc.org\/core-2.4.0\/Dir.html#method-c-exist-3F\" rel=\"noreferrer\">1<\/a><\/sup><\/p>\n<\/blockquote>\n","last_edit_date":1489098050.0,"community_owned_date":null},{"owner":{"account_id":109085,"reputation":8771,"user_id":289219,"user_type":"registered","accept_rate":33,"profile_image":"https:\/\/www.gravatar.com\/avatar\/7d7ec8748b292656c5f8589419cdd527?s=256&d=identicon&r=PG","display_name":"Robert Kajic","link":"https:\/\/stackoverflow.com\/users\/289219\/robert-kajic"},"is_accepted":false,"score":50,"last_activity_date":1391616571,"creation_date":1391616571,"answer_id":21582329,"question_id":10464793,"content_license":"CC BY-SA 3.0","body_markdown":"Use the `super` keyword:\r\n\r\n    def attribute_name=(value)\r\n      super(value.some_custom_encode)\r\n    end\r\n\r\nConversely, to override the reader:\r\n    \r\n    def attribute_name\r\n      super.some_custom_decode\r\n    end","body":"<p>Use the <code>super<\/code> keyword:<\/p>\n\n<pre><code>def attribute_name=(value)\n  super(value.some_custom_encode)\nend\n<\/code><\/pre>\n\n<p>Conversely, to override the reader:<\/p>\n\n<pre><code>def attribute_name\n  super.some_custom_decode\nend\n<\/code><\/pre>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":2469727,"reputation":3420,"user_id":2151934,"user_type":"registered","accept_rate":78,"profile_image":"https:\/\/i.stack.imgur.com\/lCoBF.jpg?s=256&g=1","display_name":"coding addicted","link":"https:\/\/stackoverflow.com\/users\/2151934\/coding-addicted"},"is_accepted":false,"score":50,"last_activity_date":1623162280,"creation_date":1459702857,"answer_id":36388366,"question_id":19673714,"content_license":"CC BY-SA 4.0","body_markdown":"With homebrew this helps me to solve this error.\r\n\r\n    brew tap homebrew\/versions\r\n    brew install v8-315\r\n    \r\n    gem install libv8 -v &#39;3.16.14.13&#39; -- --with-system-v8\r\n    gem install therubyracer -- --with-v8-dir=\/usr\/local\/opt\/v8-315\r\n    \r\n    bundle install\r\n\r\n\r\nSeen on rubyracer Github issues. \r\n\r\nFor new version of homebrew as homebrew\/versions has been removed: \r\n\r\n    brew install v8@3.15\r\n    \r\n    gem install libv8 -v &#39;3.16.14.13&#39; -- --with-system-v8\r\n    gem install therubyracer -- --with-v8-dir=\/usr\/local\/opt\/v8@3.15\r\n    \r\n    bundle install\r\n\r\nSuggestion by @gorner (thx)","body":"<p>With homebrew this helps me to solve this error.<\/p>\n<pre><code>brew tap homebrew\/versions\nbrew install v8-315\n\ngem install libv8 -v '3.16.14.13' -- --with-system-v8\ngem install therubyracer -- --with-v8-dir=\/usr\/local\/opt\/v8-315\n\nbundle install\n<\/code><\/pre>\n<p>Seen on rubyracer Github issues.<\/p>\n<p>For new version of homebrew as homebrew\/versions has been removed:<\/p>\n<pre><code>brew install v8@3.15\n\ngem install libv8 -v '3.16.14.13' -- --with-system-v8\ngem install therubyracer -- --with-v8-dir=\/usr\/local\/opt\/v8@3.15\n\nbundle install\n<\/code><\/pre>\n<p>Suggestion by @gorner (thx)<\/p>\n","last_edit_date":1623162280.0,"community_owned_date":null},{"owner":{"account_id":20341,"reputation":230430,"user_id":48523,"user_type":"registered","accept_rate":68,"profile_image":"https:\/\/www.gravatar.com\/avatar\/1c787bc735dbe80ec2f88824e1d10c6c?s=256&d=identicon&r=PG","display_name":"Andrew","link":"https:\/\/stackoverflow.com\/users\/48523\/andrew"},"is_accepted":false,"score":48,"last_activity_date":1351720621,"creation_date":1351720621,"answer_id":13168037,"question_id":1085218,"content_license":"CC BY-SA 3.0","body_markdown":"All the other answers are correct, however, you might have problems if you&#39;re trying to check directory in a user&#39;s home directory. Make sure you expand the relative path before checking:\r\n\r\n    File.exists? &#39;~\/exists&#39;\r\n    =&gt; false\r\n    File.directory? &#39;~\/exists&#39;\r\n    =&gt; false\r\n    File.exists? File.expand_path(&#39;~\/exists&#39;)\r\n    =&gt; true","body":"<p>All the other answers are correct, however, you might have problems if you're trying to check directory in a user's home directory. Make sure you expand the relative path before checking:<\/p>\n\n<pre><code>File.exists? '~\/exists'\n=&gt; false\nFile.directory? '~\/exists'\n=&gt; false\nFile.exists? File.expand_path('~\/exists')\n=&gt; true\n<\/code><\/pre>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":4369130,"reputation":12126,"user_id":3563993,"user_type":"registered","accept_rate":89,"profile_image":"https:\/\/www.gravatar.com\/avatar\/6e213cbcdd4a7b892589300ac92a49ab?s=256&d=identicon&r=PG","display_name":"K\u1d0f\u0274s\u1d1b\u1d00\u0274\u1d1b\u026a\u0274 S\u029c\u026a\u029f\u1d0f\u1d20","link":"https:\/\/stackoverflow.com\/users\/3563993\/k%e1%b4%8f%c9%b4s%e1%b4%9b%e1%b4%80%c9%b4%e1%b4%9b%c9%aa%c9%b4-s%ca%9c%c9%aa%ca%9f%e1%b4%8f%e1%b4%a0"},"is_accepted":false,"score":48,"last_activity_date":1465294942,"creation_date":1465294942,"answer_id":37676702,"question_id":9571768,"content_license":"CC BY-SA 3.0","body_markdown":"**hash.store(key, value)** - Stores a key-value pair in hash.\r\n\r\n**Example:**\r\n\r\n    hash   #=&gt; {&quot;a&quot;=&gt;9, &quot;b&quot;=&gt;200, &quot;c&quot;=&gt;4}\r\n    hash.store(&quot;d&quot;, 42) #=&gt; 42\r\n    hash   #=&gt; {&quot;a&quot;=&gt;9, &quot;b&quot;=&gt;200, &quot;c&quot;=&gt;4, &quot;d&quot;=&gt;42}\r\n\r\n&lt;kbd&gt;[Documentation][1]&lt;\/kbd&gt;\r\n  [1]: http:\/\/ruby-doc.org\/core-2.3.0\/Hash.html#method-i-store","body":"<p><strong>hash.store(key, value)<\/strong> - Stores a key-value pair in hash.<\/p>\n\n<p><strong>Example:<\/strong><\/p>\n\n<pre><code>hash   #=&gt; {\"a\"=&gt;9, \"b\"=&gt;200, \"c\"=&gt;4}\nhash.store(\"d\", 42) #=&gt; 42\nhash   #=&gt; {\"a\"=&gt;9, \"b\"=&gt;200, \"c\"=&gt;4, \"d\"=&gt;42}\n<\/code><\/pre>\n\n<p><kbd><a href=\"http:\/\/ruby-doc.org\/core-2.3.0\/Hash.html#method-i-store\" rel=\"noreferrer\">Documentation<\/a><\/kbd><\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":5938763,"reputation":599,"user_id":4670819,"user_type":"registered","profile_image":"https:\/\/i.stack.imgur.com\/jWodD.jpg?s=256&g=1","display_name":"hhzhu","link":"https:\/\/stackoverflow.com\/users\/4670819\/hhzhu"},"is_accepted":false,"score":48,"last_activity_date":1466879923,"creation_date":1466878609,"answer_id":38031549,"question_id":23963018,"content_license":"CC BY-SA 3.0","body_markdown":"If you don&#39;t want that every time you open a terminal, do the suggestion above again, just add\r\n\r\n    source ~\/.rvm\/scripts\/rvm\r\n\r\nat the end of `~\/.bashrc`","body":"<p>If you don't want that every time you open a terminal, do the suggestion above again, just add<\/p>\n\n<pre><code>source ~\/.rvm\/scripts\/rvm\n<\/code><\/pre>\n\n<p>at the end of <code>~\/.bashrc<\/code><\/p>\n","last_edit_date":1466879923.0,"community_owned_date":null},{"owner":{"account_id":375416,"reputation":17517,"user_id":726239,"user_type":"registered","accept_rate":76,"profile_image":"https:\/\/i.stack.imgur.com\/l4w57.jpg?s=256&g=1","display_name":"Shaunak","link":"https:\/\/stackoverflow.com\/users\/726239\/shaunak"},"is_accepted":false,"score":47,"last_activity_date":1402312738,"creation_date":1304545599,"answer_id":5890234,"question_id":5890118,"content_license":"CC BY-SA 3.0","body_markdown":"`@` - Instance variable of a class&lt;br&gt;\r\n`@@` - Class variable, also called as static variable in some cases\r\n\r\n\r\nA class variable is a variable that is shared amongst all instances of a class. This means that only one variable value exists for all objects instantiated from this class. If one object instance changes the value of the variable, that new value will essentially change for all other object instances.\r\n\r\nAnother way of thinking of thinking of class variables is as global variables within the context of a single class.\r\nClass variables are declared by prefixing the variable name with two `@` characters (`@@`). Class variables must be initialized at creation time","body":"<p><code>@<\/code> - Instance variable of a class<br>\n<code>@@<\/code> - Class variable, also called as static variable in some cases<\/p>\n\n<p>A class variable is a variable that is shared amongst all instances of a class. This means that only one variable value exists for all objects instantiated from this class. If one object instance changes the value of the variable, that new value will essentially change for all other object instances.<\/p>\n\n<p>Another way of thinking of thinking of class variables is as global variables within the context of a single class.\nClass variables are declared by prefixing the variable name with two <code>@<\/code> characters (<code>@@<\/code>). Class variables must be initialized at creation time<\/p>\n","last_edit_date":1402312738.0,"community_owned_date":null},{"owner":{"account_id":2015367,"reputation":23453,"user_id":1836143,"user_type":"registered","accept_rate":85,"profile_image":"https:\/\/i.stack.imgur.com\/8ddoM.jpg?s=256&g=1","display_name":"Alexander Popov","link":"https:\/\/stackoverflow.com\/users\/1836143\/alexander-popov"},"is_accepted":false,"score":47,"last_activity_date":1386936229,"creation_date":1386936229,"answer_id":20566074,"question_id":2339695,"content_license":"CC BY-SA 3.0","body_markdown":"I asked [a similar question](https:\/\/stackoverflow.com\/questions\/19853566\/how-to-return-a-fixed-length-binary-representation-of-an-integer-in-ruby). Based on [@sawa](https:\/\/stackoverflow.com\/a\/19853637\/1836143)&#39;s answer, the most succinct way to represent an integer in a string in binary format is to use the string formatter:\r\n\r\n    &quot;%b&quot; % 245\r\n    =&gt; &quot;11110101&quot;\r\n\r\nYou can also choose how long the string representation to be, which might be useful if you want to compare fixed-width binary numbers:\r\n\r\n    1.upto(10).each { |n| puts &quot;%04b&quot; % n }\r\n    0001\r\n    0010\r\n    0011\r\n    0100\r\n    0101\r\n    0110\r\n    0111\r\n    1000\r\n    1001\r\n    1010","body":"<p>I asked <a href=\"https:\/\/stackoverflow.com\/questions\/19853566\/how-to-return-a-fixed-length-binary-representation-of-an-integer-in-ruby\">a similar question<\/a>. Based on <a href=\"https:\/\/stackoverflow.com\/a\/19853637\/1836143\">@sawa<\/a>'s answer, the most succinct way to represent an integer in a string in binary format is to use the string formatter:<\/p>\n\n<pre><code>\"%b\" % 245\n=&gt; \"11110101\"\n<\/code><\/pre>\n\n<p>You can also choose how long the string representation to be, which might be useful if you want to compare fixed-width binary numbers:<\/p>\n\n<pre><code>1.upto(10).each { |n| puts \"%04b\" % n }\n0001\n0010\n0011\n0100\n0101\n0110\n0111\n1000\n1001\n1010\n<\/code><\/pre>\n","last_edit_date":1495541901.0,"community_owned_date":null},{"owner":{"account_id":6227,"reputation":34871,"user_id":10396,"user_type":"registered","accept_rate":76,"profile_image":"https:\/\/i.stack.imgur.com\/FtcvL.png?s=256&g=1","display_name":"AShelly","link":"https:\/\/stackoverflow.com\/users\/10396\/ashelly"},"is_accepted":false,"score":46,"last_activity_date":1437428750,"creation_date":1222108043,"answer_id":116614,"question_id":116593,"content_license":"CC BY-SA 3.0","body_markdown":"On *nix boxes \r\n\r\n    `clear`\r\n\r\non Windows\r\n\r\n    system &#39;cls&#39; # works\r\n    `cls` # does not work\r\n\r\non OSX\r\n\r\n    system &#39;clear&#39; # works\r\n    `clear` # does not work\r\n    ","body":"<p>On *nix boxes <\/p>\n\n<pre><code>`clear`\n<\/code><\/pre>\n\n<p>on Windows<\/p>\n\n<pre><code>system 'cls' # works\n`cls` # does not work\n<\/code><\/pre>\n\n<p>on OSX<\/p>\n\n<pre><code>system 'clear' # works\n`clear` # does not work\n<\/code><\/pre>\n","last_edit_date":1437428750.0,"community_owned_date":null},{"owner":{"account_id":71221,"reputation":64656,"user_id":205930,"user_type":"registered","accept_rate":100,"profile_image":"https:\/\/i.stack.imgur.com\/5Uk5W.jpg?s=256&g=1","display_name":"Alex","link":"https:\/\/stackoverflow.com\/users\/205930\/alex"},"is_accepted":false,"score":46,"last_activity_date":1289275924,"creation_date":1289274881,"answer_id":4130378,"question_id":4130364,"content_license":"CC BY-SA 2.5","body_markdown":"Your question title and your question body are different. *Ruby* does not have a starts_with? method. *Rails*, which is a Ruby *framework*, however, *does*, as sepp2k states. See his comment on his answer for the link to the documentation for it.\r\n\r\nYou could always use a regular expression though:\r\n\r\n    if SomeString.match(\/^abc\/) \r\n       # SomeString starts with abc\r\n\r\n`^` means &quot;start of string&quot; in regular expressions","body":"<p>Your question title and your question body are different. <em>Ruby<\/em> does not have a starts_with? method. <em>Rails<\/em>, which is a Ruby <em>framework<\/em>, however, <em>does<\/em>, as sepp2k states. See his comment on his answer for the link to the documentation for it.<\/p>\n\n<p>You could always use a regular expression though:<\/p>\n\n<pre><code>if SomeString.match(\/^abc\/) \n   # SomeString starts with abc\n<\/code><\/pre>\n\n<p><code>^<\/code> means \"start of string\" in regular expressions<\/p>\n","last_edit_date":1289275924.0,"community_owned_date":null},{"owner":{"account_id":1457256,"reputation":461,"user_id":1372530,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/dfb07d2e848f252f5374d07931c7c3fa?s=256&d=identicon&r=PG","display_name":"Sachin Saxena","link":"https:\/\/stackoverflow.com\/users\/1372530\/sachin-saxena"},"is_accepted":false,"score":46,"last_activity_date":1587022679,"creation_date":1402224248,"answer_id":24105337,"question_id":15773552,"content_license":"CC BY-SA 4.0","body_markdown":"[Source](https:\/\/stackoverflow.com\/questions\/15773552\/ruby-class-instance-variable-vs-class-variable\/15773671)\r\n\r\n**Availability to instance methods**\r\n\r\n* Class instance variables are available only to class methods and not to instance methods.\r\n* Class variables are available to both instance methods and class methods.\r\n\r\n**Inheritability**\r\n\r\n* Class instance variables are lost in the inheritance chain.\r\n* Class variables are not.\r\n\r\n\r\n```rb\r\nclass Vars\r\n\r\n  @class_ins_var = &quot;class instance variable value&quot;  #class instance variable\r\n  @@class_var = &quot;class variable value&quot; #class  variable\r\n\r\n  def self.class_method\r\n    puts @class_ins_var\r\n    puts @@class_var\r\n  end\r\n\r\n  def instance_method\r\n    puts @class_ins_var\r\n    puts @@class_var\r\n  end\r\nend\r\n\r\nVars.class_method\r\n\r\nputs &quot;see the difference&quot;\r\n\r\nobj = Vars.new\r\n\r\nobj.instance_method\r\n\r\nclass VarsChild &lt; Vars\r\n\r\n\r\nend\r\n\r\nVarsChild.class_method\r\n```","body":"<p><a href=\"https:\/\/stackoverflow.com\/questions\/15773552\/ruby-class-instance-variable-vs-class-variable\/15773671\">Source<\/a><\/p>\n\n<p><strong>Availability to instance methods<\/strong><\/p>\n\n<ul>\n<li>Class instance variables are available only to class methods and not to instance methods.<\/li>\n<li>Class variables are available to both instance methods and class methods.<\/li>\n<\/ul>\n\n<p><strong>Inheritability<\/strong><\/p>\n\n<ul>\n<li>Class instance variables are lost in the inheritance chain.<\/li>\n<li>Class variables are not.<\/li>\n<\/ul>\n\n<pre class=\"lang-rb prettyprint-override\"><code>class Vars\n\n  @class_ins_var = \"class instance variable value\"  #class instance variable\n  @@class_var = \"class variable value\" #class  variable\n\n  def self.class_method\n    puts @class_ins_var\n    puts @@class_var\n  end\n\n  def instance_method\n    puts @class_ins_var\n    puts @@class_var\n  end\nend\n\nVars.class_method\n\nputs \"see the difference\"\n\nobj = Vars.new\n\nobj.instance_method\n\nclass VarsChild &lt; Vars\n\n\nend\n\nVarsChild.class_method\n<\/code><\/pre>\n","last_edit_date":1587022679.0,"community_owned_date":null},{"owner":{"account_id":19604,"reputation":2016,"user_id":46055,"user_type":"registered","accept_rate":91,"profile_image":"https:\/\/www.gravatar.com\/avatar\/bd4f9eea0bb4724664d101c1912f561d?s=256&d=identicon&r=PG","display_name":"Aaron Rustad","link":"https:\/\/stackoverflow.com\/users\/46055\/aaron-rustad"},"is_accepted":false,"score":45,"last_activity_date":1244334766,"creation_date":1244334766,"answer_id":960903,"question_id":639171,"content_license":"CC BY-SA 2.5","body_markdown":"This might have changed in recent release of Rails, but the appropriate way to solve this problem is to add **:readonly =&gt; false** to the find options.","body":"<p>This might have changed in recent release of Rails, but the appropriate way to solve this problem is to add <strong>:readonly => false<\/strong> to the find options.<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":41467,"reputation":34454,"user_id":120518,"user_type":"registered","accept_rate":50,"profile_image":"https:\/\/www.gravatar.com\/avatar\/edf1077f9152b361937f12707e3af891?s=256&d=identicon&r=PG","display_name":"Shadwell","link":"https:\/\/stackoverflow.com\/users\/120518\/shadwell"},"is_accepted":false,"score":45,"last_activity_date":1282035561,"creation_date":1282035561,"answer_id":3500844,"question_id":3500814,"content_license":"CC BY-SA 2.5","body_markdown":"    &gt; a = [&#39;12&#39;,&#39;34&#39;,&#39;35&#39;,&#39;231&#39;]\r\n    &gt; a.map { |i| &quot;&#39;&quot; + i.to_s + &quot;&#39;&quot; }.join(&quot;,&quot;)\r\n    =&gt; &quot;&#39;12&#39;,&#39;34&#39;,&#39;35&#39;,&#39;231&#39;&quot;","body":"<pre><code>&gt; a = ['12','34','35','231']\n&gt; a.map { |i| \"'\" + i.to_s + \"'\" }.join(\",\")\n=&gt; \"'12','34','35','231'\"\n<\/code><\/pre>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":100773,"reputation":61749,"user_id":271475,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/9b00f41e5f2a69734051f2a78f4f3785?s=256&d=identicon&r=PG","display_name":"Chris Heald","link":"https:\/\/stackoverflow.com\/users\/271475\/chris-heald"},"is_accepted":false,"score":45,"last_activity_date":1479882154,"creation_date":1326957936,"answer_id":8922408,"question_id":8921999,"content_license":"CC BY-SA 3.0","body_markdown":"Simply find the first instance where the index of the object (counting from the left) does not equal the index of the object (counting from the right).\r\n\r\n    arr.detect {|e| arr.rindex(e) != arr.index(e) }\r\n\r\nIf there are no duplicates, the return value will be nil.\r\n\r\nI believe this is the fastest solution posted in the thread so far, as well, since it doesn&#39;t rely on the creation of additional objects, and `#index` and `#rindex` are implemented in C. The big-O runtime is N^2 and thus slower than Sergio&#39;s, but the wall time could be much faster due to the the fact that the &quot;slow&quot; parts run in C.","body":"<p>Simply find the first instance where the index of the object (counting from the left) does not equal the index of the object (counting from the right).<\/p>\n\n<pre><code>arr.detect {|e| arr.rindex(e) != arr.index(e) }\n<\/code><\/pre>\n\n<p>If there are no duplicates, the return value will be nil.<\/p>\n\n<p>I believe this is the fastest solution posted in the thread so far, as well, since it doesn't rely on the creation of additional objects, and <code>#index<\/code> and <code>#rindex<\/code> are implemented in C. The big-O runtime is N^2 and thus slower than Sergio's, but the wall time could be much faster due to the the fact that the \"slow\" parts run in C.<\/p>\n","last_edit_date":1479882154.0,"community_owned_date":null},{"owner":{"account_id":95822,"reputation":2334,"user_id":260771,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/e9e852b18079792bc5f4ec52b8e37c53?s=256&d=identicon&r=PG","display_name":"Elliot Winkler","link":"https:\/\/stackoverflow.com\/users\/260771\/elliot-winkler"},"is_accepted":true,"score":45,"last_activity_date":1632180338,"creation_date":1335422646,"answer_id":10328441,"question_id":5285711,"content_license":"CC BY-SA 4.0","body_markdown":"&gt; I&#39;m looking for similar functionality to rspec path\/to\/file.rb -l 25\r\n\r\nWith [Nick Quaranto&#39;s &quot;m&quot; gem](http:\/\/github.com\/qrush\/m), you can say:\r\n\r\n    m spec\/my_spec.rb:25","body":"<blockquote>\n<p>I'm looking for similar functionality to rspec path\/to\/file.rb -l 25<\/p>\n<\/blockquote>\n<p>With <a href=\"http:\/\/github.com\/qrush\/m\" rel=\"nofollow noreferrer\">Nick Quaranto's &quot;m&quot; gem<\/a>, you can say:<\/p>\n<pre><code>m spec\/my_spec.rb:25\n<\/code><\/pre>\n","last_edit_date":1632180338.0,"community_owned_date":null},{"owner":{"account_id":1333103,"reputation":38813,"user_id":1276506,"user_type":"registered","accept_rate":83,"profile_image":"https:\/\/www.gravatar.com\/avatar\/7149d2bc15314277ac69357ef7251650?s=256&d=identicon&r=PG","display_name":"boulder_ruby","link":"https:\/\/stackoverflow.com\/users\/1276506\/boulder-ruby"},"is_accepted":false,"score":45,"last_activity_date":1457622097,"creation_date":1342544950,"answer_id":11527422,"question_id":4822422,"content_license":"CC BY-SA 3.0","body_markdown":"I&#39;ve got this down to just one line.\r\n\r\n    rows = [[&#39;a1&#39;, &#39;a2&#39;, &#39;a3&#39;],[&#39;b1&#39;, &#39;b2&#39;, &#39;b3&#39;, &#39;b4&#39;], [&#39;c1&#39;, &#39;c2&#39;, &#39;c3&#39;], ... ]\r\n    csv_str = rows.inject([]) { |csv, row|  csv &lt;&lt; CSV.generate_line(row) }.join(&quot;&quot;)\r\n    #=&gt; &quot;a1,a2,a3\\nb1,b2,b3\\nc1,c2,c3\\n&quot; \r\n    \r\nDo all of the above **and** save to a csv, in one line.\r\n\r\n    File.open(&quot;ss.csv&quot;, &quot;w&quot;) {|f| f.write(rows.inject([]) { |csv, row|  csv &lt;&lt; CSV.generate_line(row) }.join(&quot;&quot;))}\r\n\r\n\r\nNOTE:\r\n\r\nTo convert an active record database to csv would be something like this I think\r\n    \r\n    CSV.open(fn, &#39;w&#39;) do |csv|\r\n      csv &lt;&lt; Model.column_names\r\n      Model.where(query).each do |m|\r\n        csv &lt;&lt; m.attributes.values\r\n      end\r\n    end\r\n\r\n---------------------\r\n\r\nHmm @tamouse, that gist is somewhat confusing to me without reading the csv source, but generically, assuming each hash in your array has the same number of k\/v pairs &amp; that the keys are always the same, in the same order (i.e. if your data is structured), this should do the deed:\r\n\r\n\trowid = 0\r\n\tCSV.open(fn, &#39;w&#39;) do |csv|\r\n\t  hsh_ary.each do |hsh|\r\n\t    rowid += 1\r\n\t    if rowid == 1\r\n\t      csv &lt;&lt; hsh.keys# adding header row (column labels)\r\n\t    else\r\n\t      csv &lt;&lt; hsh.values\r\n\t    end# of if\/else inside hsh\r\n\t  end# of hsh&#39;s (rows)\r\n\tend# of csv open\r\n\r\nIf your data isn&#39;t structured this obviously won&#39;t work","body":"<p>I've got this down to just one line.<\/p>\n\n<pre><code>rows = [['a1', 'a2', 'a3'],['b1', 'b2', 'b3', 'b4'], ['c1', 'c2', 'c3'], ... ]\ncsv_str = rows.inject([]) { |csv, row|  csv &lt;&lt; CSV.generate_line(row) }.join(\"\")\n#=&gt; \"a1,a2,a3\\nb1,b2,b3\\nc1,c2,c3\\n\" \n<\/code><\/pre>\n\n<p>Do all of the above <strong>and<\/strong> save to a csv, in one line.<\/p>\n\n<pre><code>File.open(\"ss.csv\", \"w\") {|f| f.write(rows.inject([]) { |csv, row|  csv &lt;&lt; CSV.generate_line(row) }.join(\"\"))}\n<\/code><\/pre>\n\n<p>NOTE:<\/p>\n\n<p>To convert an active record database to csv would be something like this I think<\/p>\n\n<pre><code>CSV.open(fn, 'w') do |csv|\n  csv &lt;&lt; Model.column_names\n  Model.where(query).each do |m|\n    csv &lt;&lt; m.attributes.values\n  end\nend\n<\/code><\/pre>\n\n<hr>\n\n<p>Hmm @tamouse, that gist is somewhat confusing to me without reading the csv source, but generically, assuming each hash in your array has the same number of k\/v pairs &amp; that the keys are always the same, in the same order (i.e. if your data is structured), this should do the deed:<\/p>\n\n<pre><code>rowid = 0\nCSV.open(fn, 'w') do |csv|\n  hsh_ary.each do |hsh|\n    rowid += 1\n    if rowid == 1\n      csv &lt;&lt; hsh.keys# adding header row (column labels)\n    else\n      csv &lt;&lt; hsh.values\n    end# of if\/else inside hsh\n  end# of hsh's (rows)\nend# of csv open\n<\/code><\/pre>\n\n<p>If your data isn't structured this obviously won't work<\/p>\n","last_edit_date":1457622097.0,"community_owned_date":null},{"owner":{"account_id":3589417,"reputation":1373,"user_id":2995824,"user_type":"registered","profile_image":"https:\/\/i.stack.imgur.com\/GjDPw.jpg?s=256&g=1","display_name":"Eadz","link":"https:\/\/stackoverflow.com\/users\/2995824\/eadz"},"is_accepted":false,"score":44,"last_activity_date":1574447011,"creation_date":1397020931,"answer_id":22953440,"question_id":2083112,"content_license":"CC BY-SA 4.0","body_markdown":"`and`\/`or` are for control flow. \r\n\r\nRuby will not allow this as valid syntax:\r\n\r\n    false || raise &quot;Error&quot;\r\n\r\nHowever this is valid:\r\n\r\n    false or raise &quot;Error&quot;\r\n\r\nYou can make the first work, with `()` but using `or` is the correct method.\r\n\r\n    false || (raise &quot;Error&quot;)\r\n\r\n","body":"<p><code>and<\/code>\/<code>or<\/code> are for control flow. <\/p>\n\n<p>Ruby will not allow this as valid syntax:<\/p>\n\n<pre><code>false || raise \"Error\"\n<\/code><\/pre>\n\n<p>However this is valid:<\/p>\n\n<pre><code>false or raise \"Error\"\n<\/code><\/pre>\n\n<p>You can make the first work, with <code>()<\/code> but using <code>or<\/code> is the correct method.<\/p>\n\n<pre><code>false || (raise \"Error\")\n<\/code><\/pre>\n","last_edit_date":1574447011.0,"community_owned_date":null},{"owner":{"account_id":22375,"reputation":30017,"user_id":55093,"user_type":"registered","accept_rate":99,"profile_image":"https:\/\/www.gravatar.com\/avatar\/c2f43d6b1d79c82a463ec53effbec873?s=256&d=identicon&r=PG","display_name":"Amokrane Chentir","link":"https:\/\/stackoverflow.com\/users\/55093\/amokrane-chentir"},"is_accepted":false,"score":43,"last_activity_date":1486133293,"creation_date":1308392504,"answer_id":6395327,"question_id":6395288,"content_license":"CC BY-SA 3.0","body_markdown":"To answer your question, you have to use `&quot;&quot;` when you want to do string interpolation:\r\n\r\n    a = 2\r\n    puts &quot;#{a}&quot;\r\n\r\nUse simple quotes otherwise.\r\n\r\nAlso if you are wondering about whether there is a difference in terms of performance, there is an excellent [question about this on StackOverflow.][1]\r\n\r\nAnd if you are really new to RoR, I urge you to pick up a decent Ruby book to learn the basics of the language. It will help you understand what you are doing (and will keep you from thinking that Rails is magic). I personally recommend [The Well grounded Rubyist][2].\r\n\r\n\r\n  [1]: https:\/\/stackoverflow.com\/questions\/1836467\/is-there-a-performance-gain-in-using-single-quotes-vs-double-quotes-in-ruby\r\n  [2]: http:\/\/www.manning.com\/black2\/","body":"<p>To answer your question, you have to use <code>\"\"<\/code> when you want to do string interpolation:<\/p>\n\n<pre><code>a = 2\nputs \"#{a}\"\n<\/code><\/pre>\n\n<p>Use simple quotes otherwise.<\/p>\n\n<p>Also if you are wondering about whether there is a difference in terms of performance, there is an excellent <a href=\"https:\/\/stackoverflow.com\/questions\/1836467\/is-there-a-performance-gain-in-using-single-quotes-vs-double-quotes-in-ruby\">question about this on StackOverflow.<\/a><\/p>\n\n<p>And if you are really new to RoR, I urge you to pick up a decent Ruby book to learn the basics of the language. It will help you understand what you are doing (and will keep you from thinking that Rails is magic). I personally recommend <a href=\"http:\/\/www.manning.com\/black2\/\" rel=\"noreferrer\">The Well grounded Rubyist<\/a>.<\/p>\n","last_edit_date":1495535497.0,"community_owned_date":null},{"owner":{"account_id":1560448,"reputation":6144,"user_id":1450420,"user_type":"registered","accept_rate":96,"profile_image":"https:\/\/www.gravatar.com\/avatar\/cbf9e8aa5e2fb2f81bd8d8e9ea94ef50?s=256&d=identicon&r=PG","display_name":"Derek Hill","link":"https:\/\/stackoverflow.com\/users\/1450420\/derek-hill"},"is_accepted":false,"score":43,"last_activity_date":1572456282,"creation_date":1472454242,"answer_id":39200310,"question_id":5285711,"content_license":"CC BY-SA 4.0","body_markdown":"If you are using MiniTest with Rails 5+ the best way to run all tests in a single file is:\r\n\r\n    bin\/rails test path\/to\/test_file.rb\r\n\r\nAnd for a single test (e.g. on line 25):\r\n\r\n    bin\/rails test path\/to\/test_file.rb:25\r\n\r\nSee http:\/\/guides.rubyonrails.org\/testing.html#the-rails-test-runner","body":"<p>If you are using MiniTest with Rails 5+ the best way to run all tests in a single file is:<\/p>\n\n<pre><code>bin\/rails test path\/to\/test_file.rb\n<\/code><\/pre>\n\n<p>And for a single test (e.g. on line 25):<\/p>\n\n<pre><code>bin\/rails test path\/to\/test_file.rb:25\n<\/code><\/pre>\n\n<p>See <a href=\"http:\/\/guides.rubyonrails.org\/testing.html#the-rails-test-runner\" rel=\"noreferrer\">http:\/\/guides.rubyonrails.org\/testing.html#the-rails-test-runner<\/a><\/p>\n","last_edit_date":1572456282.0,"community_owned_date":null},{"owner":{"account_id":452409,"reputation":708,"user_id":848837,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/ec48016aa8edb768d50e757ef25e7788?s=256&d=identicon&r=PG","display_name":"GMD","link":"https:\/\/stackoverflow.com\/users\/848837\/gmd"},"is_accepted":false,"score":42,"last_activity_date":1494355672,"creation_date":1319689899,"answer_id":7911728,"question_id":7911669,"content_license":"CC BY-SA 3.0","body_markdown":"Try \r\n    \r\n    File.open(&quot;out.txt&quot;, &quot;w&quot;) do |f|     \r\n\t  f.write(data_you_want_to_write)   \r\n    end\r\n\r\nwithout using the\r\n\r\n    File.new &quot;out.txt&quot;\r\n\r\n","body":"<p>Try <\/p>\n\n<pre><code>File.open(\"out.txt\", \"w\") do |f|     \n  f.write(data_you_want_to_write)   \nend\n<\/code><\/pre>\n\n<p>without using the<\/p>\n\n<pre><code>File.new \"out.txt\"\n<\/code><\/pre>\n","last_edit_date":1494355672.0,"community_owned_date":null},{"owner":{"account_id":1759362,"reputation":10746,"user_id":1606888,"user_type":"registered","accept_rate":83,"profile_image":"https:\/\/www.gravatar.com\/avatar\/15a67c5384ba658abc462e0312450728?s=256&d=identicon&r=PG","display_name":"Thomas Klemm","link":"https:\/\/stackoverflow.com\/users\/1606888\/thomas-klemm"},"is_accepted":false,"score":42,"last_activity_date":1383124383,"creation_date":1383124383,"answer_id":19678070,"question_id":5191405,"content_license":"CC BY-SA 3.0","body_markdown":"In Rails 3.2 and Rails 4, Benjamin&#39;s [popular answer](https:\/\/stackoverflow.com\/questions\/5191405\/ror-migration-change-a-column-type-from-date-to-datetime\/#answer-5191453) has a slightly different syntax.\r\n\r\nFirst in your terminal:\r\n\r\n    $ rails g migration change_date_format_in_my_table\r\n\r\nThen in your migration file:\r\n\r\n    class ChangeDateFormatInMyTable &lt; ActiveRecord::Migration\r\n      def up\r\n       change_column :my_table, :my_column, :datetime\r\n      end\r\n    \r\n      def down\r\n       change_column :my_table, :my_column, :date\r\n      end\r\n    end","body":"<p>In Rails 3.2 and Rails 4, Benjamin's <a href=\"https:\/\/stackoverflow.com\/questions\/5191405\/ror-migration-change-a-column-type-from-date-to-datetime\/#answer-5191453\">popular answer<\/a> has a slightly different syntax.<\/p>\n\n<p>First in your terminal:<\/p>\n\n<pre><code>$ rails g migration change_date_format_in_my_table\n<\/code><\/pre>\n\n<p>Then in your migration file:<\/p>\n\n<pre><code>class ChangeDateFormatInMyTable &lt; ActiveRecord::Migration\n  def up\n   change_column :my_table, :my_column, :datetime\n  end\n\n  def down\n   change_column :my_table, :my_column, :date\n  end\nend\n<\/code><\/pre>\n","last_edit_date":1495540968.0,"community_owned_date":null},{"owner":{"account_id":1522872,"reputation":6429,"user_id":1422070,"user_type":"registered","accept_rate":71,"profile_image":"https:\/\/i.stack.imgur.com\/oQua9.png?s=256&g=1","display_name":"edwardmp","link":"https:\/\/stackoverflow.com\/users\/1422070\/edwardmp"},"is_accepted":false,"score":42,"last_activity_date":1481758209,"creation_date":1481758209,"answer_id":41154020,"question_id":5367164,"content_license":"CC BY-SA 3.0","body_markdown":"If you are using Rails there&#39;s also [`remove`][1].\r\n\r\nE.g. `&quot;Testmessage&quot;.remove(&quot;message&quot;)` yields `&quot;Test&quot;`.\r\n\r\nWarning: this method removes *all* occurrences\r\n\r\n\r\n  [1]: http:\/\/apidock.com\/rails\/String\/remove","body":"<p>If you are using Rails there's also <a href=\"http:\/\/apidock.com\/rails\/String\/remove\" rel=\"noreferrer\"><code>remove<\/code><\/a>.<\/p>\n\n<p>E.g. <code>\"Testmessage\".remove(\"message\")<\/code> yields <code>\"Test\"<\/code>.<\/p>\n\n<p>Warning: this method removes <em>all<\/em> occurrences<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":1249593,"reputation":788,"user_id":1210285,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/0e7478a2e5af2291956238dba58a77db?s=256&d=identicon&r=PG","display_name":"agenteo","link":"https:\/\/stackoverflow.com\/users\/1210285\/agenteo"},"is_accepted":false,"score":41,"last_activity_date":1389858909,"creation_date":1329268315,"answer_id":9286609,"question_id":7517524,"content_license":"CC BY-SA 3.0","body_markdown":"in regards to the exclamation mark I just found out it&#39;s on gems fetched via `:git`, e.g.\r\n\r\n    gem &quot;foo&quot;, :git =&gt; &quot;git@github.com:company\/foo.git&quot;","body":"<p>in regards to the exclamation mark I just found out it's on gems fetched via <code>:git<\/code>, e.g.<\/p>\n\n<pre><code>gem \"foo\", :git =&gt; \"git@github.com:company\/foo.git\"\n<\/code><\/pre>\n","last_edit_date":1389858909.0,"community_owned_date":null},{"owner":{"account_id":229489,"reputation":467,"user_id":492485,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/e840a5b546e5ea4a8296562cffd428c6?s=256&d=identicon&r=PG","display_name":"memonk","link":"https:\/\/stackoverflow.com\/users\/492485\/memonk"},"is_accepted":false,"score":40,"last_activity_date":1470144453,"creation_date":1290290342,"answer_id":4235229,"question_id":1600526,"content_license":"CC BY-SA 3.0","body_markdown":"To decode characters in Rails use:\r\n\r\n    &lt;%= raw &#39;&lt;html&gt;&#39; %&gt;\r\nSo, \r\n\r\n    &lt;%= raw &#39;&amp;lt;br&amp;gt;&#39; %&gt;\r\n\r\nwould output\r\n\r\n    &lt;br&gt;","body":"<p>To decode characters in Rails use:<\/p>\n\n<pre><code>&lt;%= raw '&lt;html&gt;' %&gt;\n<\/code><\/pre>\n\n<p>So, <\/p>\n\n<pre><code>&lt;%= raw '&amp;lt;br&amp;gt;' %&gt;\n<\/code><\/pre>\n\n<p>would output<\/p>\n\n<pre><code>&lt;br&gt;\n<\/code><\/pre>\n","last_edit_date":1470144453.0,"community_owned_date":null},{"owner":{"account_id":251671,"reputation":1836,"user_id":529218,"user_type":"registered","accept_rate":25,"profile_image":"https:\/\/www.gravatar.com\/avatar\/7dbbc03af9d05eb92a7892b5c0cdfb64?s=256&d=identicon&r=PG","display_name":"Pradeep Sanjaya","link":"https:\/\/stackoverflow.com\/users\/529218\/pradeep-sanjaya"},"is_accepted":false,"score":40,"last_activity_date":1396965844,"creation_date":1316917429,"answer_id":7543249,"question_id":7542976,"content_license":"CC BY-SA 3.0","body_markdown":"    class AddTimestampsToUser &lt; ActiveRecord::Migration\r\n      def change\r\n        change_table :users do |t|\r\n          t.timestamps\r\n        end\r\n      end\r\n    end\r\n    \r\n\r\nAvailable transformations are\r\n\r\n    change_table :table do |t|\r\n      t.column\r\n      t.index\r\n      t.timestamps\r\n      t.change\r\n      t.change_default\r\n      t.rename\r\n      t.references\r\n      t.belongs_to\r\n      t.string\r\n      t.text\r\n      t.integer\r\n      t.float\r\n      t.decimal\r\n      t.datetime\r\n      t.timestamp\r\n      t.time\r\n      t.date\r\n      t.binary\r\n      t.boolean\r\n      t.remove\r\n      t.remove_references\r\n      t.remove_belongs_to\r\n      t.remove_index\r\n      t.remove_timestamps\r\n    end\r\n\r\n[http:\/\/api.rubyonrails.org\/classes\/ActiveRecord\/ConnectionAdapters\/Table.html][1]\r\n\r\n\r\n  [1]: http:\/\/api.rubyonrails.org\/classes\/ActiveRecord\/ConnectionAdapters\/Table.html","body":"<pre><code>class AddTimestampsToUser &lt; ActiveRecord::Migration\n  def change\n    change_table :users do |t|\n      t.timestamps\n    end\n  end\nend\n<\/code><\/pre>\n\n<p>Available transformations are<\/p>\n\n<pre><code>change_table :table do |t|\n  t.column\n  t.index\n  t.timestamps\n  t.change\n  t.change_default\n  t.rename\n  t.references\n  t.belongs_to\n  t.string\n  t.text\n  t.integer\n  t.float\n  t.decimal\n  t.datetime\n  t.timestamp\n  t.time\n  t.date\n  t.binary\n  t.boolean\n  t.remove\n  t.remove_references\n  t.remove_belongs_to\n  t.remove_index\n  t.remove_timestamps\nend\n<\/code><\/pre>\n\n<p><a href=\"http:\/\/api.rubyonrails.org\/classes\/ActiveRecord\/ConnectionAdapters\/Table.html\" rel=\"noreferrer\">http:\/\/api.rubyonrails.org\/classes\/ActiveRecord\/ConnectionAdapters\/Table.html<\/a><\/p>\n","last_edit_date":1396965844.0,"community_owned_date":null},{"owner":{"account_id":176486,"reputation":23089,"user_id":407213,"user_type":"registered","accept_rate":74,"profile_image":"https:\/\/i.stack.imgur.com\/c5T4C.jpg?s=256&g=1","display_name":"Dorian","link":"https:\/\/stackoverflow.com\/users\/407213\/dorian"},"is_accepted":false,"score":40,"last_activity_date":1561098377,"creation_date":1389976801,"answer_id":21191153,"question_id":5100299,"content_license":"CC BY-SA 4.0","body_markdown":"Use `caller_locations(1,1)[0].label` (for ruby &gt;= 2.0)\r\n\r\n**Edit**: My answer was saying to use `__method__` but I was wrong, it returns the current method name.","body":"<p>Use <code>caller_locations(1,1)[0].label<\/code> (for ruby >= 2.0)<\/p>\n\n<p><strong>Edit<\/strong>: My answer was saying to use <code>__method__<\/code> but I was wrong, it returns the current method name.<\/p>\n","last_edit_date":1561098377.0,"community_owned_date":null},{"owner":{"account_id":5221651,"reputation":411,"user_id":4174925,"user_type":"registered","profile_image":"https:\/\/lh4.googleusercontent.com\/-zpJ_k8Q2WUo\/AAAAAAAAAAI\/AAAAAAAAABc\/qBGCoNnVYU0\/photo.jpg?sz=256","display_name":"Steve Craig","link":"https:\/\/stackoverflow.com\/users\/4174925\/steve-craig"},"is_accepted":false,"score":40,"last_activity_date":1510572832,"creation_date":1506371201,"answer_id":46413624,"question_id":36228873,"content_license":"CC BY-SA 3.0","body_markdown":"I&#39;ve frequently used this pattern to extend the core behavior of Ruby to make it easier to deal with converting arbitrary data types to boolean values, which makes it really easy to deal with varying URL parameters, etc.\r\n\r\n    class String\r\n      def to_boolean\r\n        ActiveRecord::Type::Boolean.new.cast(self)\r\n      end\r\n    end\r\n\r\n    class NilClass\r\n      def to_boolean\r\n        false\r\n      end\r\n    end\r\n\r\n    class TrueClass\r\n      def to_boolean\r\n        true\r\n      end\r\n\r\n      def to_i\r\n        1\r\n      end\r\n    end\r\n\r\n    class FalseClass\r\n      def to_boolean\r\n        false\r\n      end\r\n\r\n      def to_i\r\n        0\r\n      end\r\n    end\r\n\r\n    class Integer\r\n      def to_boolean\r\n        to_s.to_boolean\r\n      end\r\n    end\r\n\r\nSo let&#39;s say you have a parameter `foo` which can be:\r\n\r\n - an integer (0 is false, all others are true)\r\n - a true boolean (true\/false) \r\n - a string (&quot;true&quot;, &quot;false&quot;, &quot;0&quot;, &quot;1&quot;, &quot;TRUE&quot;, &quot;FALSE&quot;)\r\n - nil\r\n\r\nInstead of using a bunch of conditionals, you can just call `foo.to_boolean` and it will do the rest of the magic for you.\r\n\r\nIn Rails, I add this to an initializer named `core_ext.rb` in nearly all of my projects since this pattern is so common.\r\n\r\n    ## EXAMPLES\r\n\r\n    nil.to_boolean     == false\r\n    true.to_boolean    == true\r\n    false.to_boolean   == false\r\n    0.to_boolean       == false\r\n    1.to_boolean       == true\r\n    99.to_boolean      == true\r\n    &quot;true&quot;.to_boolean  == true\r\n    &quot;foo&quot;.to_boolean   == true\r\n    &quot;false&quot;.to_boolean == false\r\n    &quot;TRUE&quot;.to_boolean  == true\r\n    &quot;FALSE&quot;.to_boolean == false\r\n    &quot;0&quot;.to_boolean     == false\r\n    &quot;1&quot;.to_boolean     == true\r\n    true.to_i          == 1\r\n    false.to_i         == 0\r\n\r\n","body":"<p>I've frequently used this pattern to extend the core behavior of Ruby to make it easier to deal with converting arbitrary data types to boolean values, which makes it really easy to deal with varying URL parameters, etc.<\/p>\n\n<pre><code>class String\n  def to_boolean\n    ActiveRecord::Type::Boolean.new.cast(self)\n  end\nend\n\nclass NilClass\n  def to_boolean\n    false\n  end\nend\n\nclass TrueClass\n  def to_boolean\n    true\n  end\n\n  def to_i\n    1\n  end\nend\n\nclass FalseClass\n  def to_boolean\n    false\n  end\n\n  def to_i\n    0\n  end\nend\n\nclass Integer\n  def to_boolean\n    to_s.to_boolean\n  end\nend\n<\/code><\/pre>\n\n<p>So let's say you have a parameter <code>foo<\/code> which can be:<\/p>\n\n<ul>\n<li>an integer (0 is false, all others are true)<\/li>\n<li>a true boolean (true\/false) <\/li>\n<li>a string (\"true\", \"false\", \"0\", \"1\", \"TRUE\", \"FALSE\")<\/li>\n<li>nil<\/li>\n<\/ul>\n\n<p>Instead of using a bunch of conditionals, you can just call <code>foo.to_boolean<\/code> and it will do the rest of the magic for you.<\/p>\n\n<p>In Rails, I add this to an initializer named <code>core_ext.rb<\/code> in nearly all of my projects since this pattern is so common.<\/p>\n\n<pre><code>## EXAMPLES\n\nnil.to_boolean     == false\ntrue.to_boolean    == true\nfalse.to_boolean   == false\n0.to_boolean       == false\n1.to_boolean       == true\n99.to_boolean      == true\n\"true\".to_boolean  == true\n\"foo\".to_boolean   == true\n\"false\".to_boolean == false\n\"TRUE\".to_boolean  == true\n\"FALSE\".to_boolean == false\n\"0\".to_boolean     == false\n\"1\".to_boolean     == true\ntrue.to_i          == 1\nfalse.to_i         == 0\n<\/code><\/pre>\n","last_edit_date":1510572832.0,"community_owned_date":null},{"owner":{"account_id":4450305,"reputation":5472,"user_id":3622415,"user_type":"registered","accept_rate":100,"profile_image":"https:\/\/www.gravatar.com\/avatar\/873e6fd319032200fd5dc359f5d897eb?s=256&d=identicon&r=PG","display_name":"kangkyu","link":"https:\/\/stackoverflow.com\/users\/3622415\/kangkyu"},"is_accepted":false,"score":39,"last_activity_date":1457519965,"creation_date":1432922176,"answer_id":30536124,"question_id":6590107,"content_license":"CC BY-SA 3.0","body_markdown":"I found this out while I was trying to remove a table via a migration:\r\n\r\n    drop_table :kittens if (table_exists? :kittens)\r\n    ActiveRecord::Migration.drop_table :kittens if (ActiveRecord::Base.connection.table_exists? :kittens)\r\n\r\nworks for Rails 3.2\r\n\r\nThis simpler form will become available in Rails 5:\r\n\r\n    drop_table :kittens, if_exists: true\r\n\r\nReference: https:\/\/github.com\/rails\/rails\/pull\/16366\r\n\r\nAnd here&#39;s the Rails 5 ActiveRecord&#39;s [CHANGELOG][1]:\r\n\r\n&gt; ## Introduce the :if_exists option for drop_table.\r\n&gt; \r\n&gt; Example:\r\n&gt; \r\n&gt;     drop_table(:posts, if_exists: true)\r\n&gt; That would execute:\r\n&gt; \r\n&gt;     DROP TABLE IF EXISTS posts\r\n&gt; If the table doesn&#39;t exist, if_exists: false (the default) raises an exception whereas if_exists: true does nothing.\r\n\r\n\r\n  [1]: https:\/\/github.com\/rails\/rails\/blob\/master\/activerecord\/CHANGELOG.md","body":"<p>I found this out while I was trying to remove a table via a migration:<\/p>\n\n<pre><code>drop_table :kittens if (table_exists? :kittens)\nActiveRecord::Migration.drop_table :kittens if (ActiveRecord::Base.connection.table_exists? :kittens)\n<\/code><\/pre>\n\n<p>works for Rails 3.2<\/p>\n\n<p>This simpler form will become available in Rails 5:<\/p>\n\n<pre><code>drop_table :kittens, if_exists: true\n<\/code><\/pre>\n\n<p>Reference: <a href=\"https:\/\/github.com\/rails\/rails\/pull\/16366\">https:\/\/github.com\/rails\/rails\/pull\/16366<\/a><\/p>\n\n<p>And here's the Rails 5 ActiveRecord's <a href=\"https:\/\/github.com\/rails\/rails\/blob\/master\/activerecord\/CHANGELOG.md\">CHANGELOG<\/a>:<\/p>\n\n<blockquote>\n  <h2>Introduce the :if_exists option for drop_table.<\/h2>\n  \n  <p>Example:<\/p>\n\n<pre><code>drop_table(:posts, if_exists: true)\n<\/code><\/pre>\n  \n  <p>That would execute:<\/p>\n\n<pre><code>DROP TABLE IF EXISTS posts\n<\/code><\/pre>\n  \n  <p>If the table doesn't exist, if_exists: false (the default) raises an exception whereas if_exists: true does nothing.<\/p>\n<\/blockquote>\n","last_edit_date":1457519965.0,"community_owned_date":null},{"owner":{"account_id":6251716,"reputation":405,"user_id":4861566,"user_type":"registered","profile_image":"https:\/\/lh3.googleusercontent.com\/-YLLcJcFQvuo\/AAAAAAAAAAI\/AAAAAAAAAMA\/Vnpk995NpTU\/photo.jpg?sz=256","display_name":"tint lwin lwin win","link":"https:\/\/stackoverflow.com\/users\/4861566\/tint-lwin-lwin-win"},"is_accepted":false,"score":38,"last_activity_date":1431326249,"creation_date":1431324933,"answer_id":30160724,"question_id":13520162,"content_license":"CC BY-SA 3.0","body_markdown":"`&quot;hello world&quot;.titleize` which should output &quot;Hello World&quot;.","body":"<p><code>\"hello world\".titleize<\/code> which should output \"Hello World\".<\/p>\n","last_edit_date":1431326249.0,"community_owned_date":null},{"owner":{"account_id":2172,"reputation":365278,"user_id":2988,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/ed181f8c80df53d2b67a4f4fff088ed4?s=256&d=identicon&r=PG","display_name":"J&#246;rg W Mittag","link":"https:\/\/stackoverflow.com\/users\/2988\/j%c3%b6rg-w-mittag"},"is_accepted":false,"score":37,"last_activity_date":1332001559,"creation_date":1332001559,"answer_id":9751649,"question_id":9750610,"content_license":"CC BY-SA 3.0","body_markdown":"`require` loads a file from the `$LOAD_PATH`. If you want to require a file relative to the currently executing file instead of from the `$LOAD_PATH`, use `require_relative`.","body":"<p><code>require<\/code> loads a file from the <code>$LOAD_PATH<\/code>. If you want to require a file relative to the currently executing file instead of from the <code>$LOAD_PATH<\/code>, use <code>require_relative<\/code>.<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":439963,"reputation":30915,"user_id":1133932,"user_type":"registered","accept_rate":79,"profile_image":"https:\/\/i.stack.imgur.com\/5oN3M.jpg?s=256&g=1","display_name":"Manish Shrivastava","link":"https:\/\/stackoverflow.com\/users\/1133932\/manish-shrivastava"},"is_accepted":false,"score":37,"last_activity_date":1389078672,"creation_date":1389078672,"answer_id":20965923,"question_id":2797339,"content_license":"CC BY-SA 3.0","body_markdown":"See **destroy deletes its associated elements**  where **delete_all can delete multiple data from self table** as `DELETE * FROM table where field = &#39;xyz&#39;`\r\n\r\n**:Dependent possible options:** \r\n\r\nControls what happens to the associated objects when their owner is destroyed. Note that these are implemented as callbacks, and Rails executes callbacks in order. Therefore, other similar callbacks may affect the :dependent behavior, and the `:dependent` behavior may affect other callbacks.\r\n\r\n`:destroy` causes all the associated objects to also be destroyed.\r\n\r\n`:delete_all` causes all the associated objects to be deleted directly from the database (so callbacks will not be executed).\r\n\r\n`:nullify` causes the foreign keys to be set to NULL. Callbacks are not executed.\r\n\r\n`:restrict_with_exception` causes an exception to be raised if there are any associated records.\r\n\r\n`:restrict_with_error` causes an error to be added to the owner if there are any associated objects.\r\n\r\nIf using with the `:through` option, the association on the join model must be a belongs_to, and the records which get deleted are the join records, rather than the associated records.","body":"<p>See <strong>destroy deletes its associated elements<\/strong>  where <strong>delete_all can delete multiple data from self table<\/strong> as <code>DELETE * FROM table where field = 'xyz'<\/code><\/p>\n\n<p><strong>:Dependent possible options:<\/strong> <\/p>\n\n<p>Controls what happens to the associated objects when their owner is destroyed. Note that these are implemented as callbacks, and Rails executes callbacks in order. Therefore, other similar callbacks may affect the :dependent behavior, and the <code>:dependent<\/code> behavior may affect other callbacks.<\/p>\n\n<p><code>:destroy<\/code> causes all the associated objects to also be destroyed.<\/p>\n\n<p><code>:delete_all<\/code> causes all the associated objects to be deleted directly from the database (so callbacks will not be executed).<\/p>\n\n<p><code>:nullify<\/code> causes the foreign keys to be set to NULL. Callbacks are not executed.<\/p>\n\n<p><code>:restrict_with_exception<\/code> causes an exception to be raised if there are any associated records.<\/p>\n\n<p><code>:restrict_with_error<\/code> causes an error to be added to the owner if there are any associated objects.<\/p>\n\n<p>If using with the <code>:through<\/code> option, the association on the join model must be a belongs_to, and the records which get deleted are the join records, rather than the associated records.<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":930925,"reputation":29905,"user_id":960828,"user_type":"registered","accept_rate":90,"profile_image":"https:\/\/www.gravatar.com\/avatar\/5dbfc386f986b9d600324cd02dae266d?s=256&d=identicon&r=PG","display_name":"Alex D","link":"https:\/\/stackoverflow.com\/users\/960828\/alex-d"},"is_accepted":false,"score":37,"last_activity_date":1440484153,"creation_date":1440484153,"answer_id":32196952,"question_id":8842546,"content_license":"CC BY-SA 3.0","body_markdown":"Another solution which works better for me than `pp` or `awesome_print`:\r\n\r\n    require &#39;pry&#39; # must install the gem... but you ALWAYS want pry installed anyways\r\n    Pry::ColorPrinter.pp(obj)\r\n    ","body":"<p>Another solution which works better for me than <code>pp<\/code> or <code>awesome_print<\/code>:<\/p>\n\n<pre><code>require 'pry' # must install the gem... but you ALWAYS want pry installed anyways\nPry::ColorPrinter.pp(obj)\n<\/code><\/pre>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":233238,"reputation":20269,"user_id":498594,"user_type":"registered","accept_rate":79,"profile_image":"https:\/\/i.stack.imgur.com\/EYtd3.png?s=256&g=1","display_name":"Kelvin","link":"https:\/\/stackoverflow.com\/users\/498594\/kelvin"},"is_accepted":false,"score":37,"last_activity_date":1543255166,"creation_date":1456423549,"answer_id":35634927,"question_id":199527,"content_license":"CC BY-SA 4.0","body_markdown":"Depending on what you actually want, you can use either `__method__` or `__callee__`, which return the currently executing method&#39;s name as a symbol.\r\n\r\nOn ruby 1.9, both of them behave identically (as far as the [docs][1] and my testing are concerned).\r\n\r\nOn ruby 2.1 &amp; 2.2 `__callee__` behaves differently if you call an alias of the defined method. The [docs][2] for the two are different:\r\n\r\n- `__method__`: &quot;the name at the definition of the current method&quot; (i.e. the name as it was defined)\r\n- `__callee__`: &quot;the called name of the current method&quot; (i.e. the name as it was called (invoked))\r\n\r\nTest script:\r\n\r\n    require &#39;pp&#39;\r\n    puts RUBY_VERSION\r\n    class Foo\r\n      def orig\r\n        {callee: __callee__, method: __method__}\r\n      end\r\n      alias_method :myalias, :orig\r\n    end\r\n    pp( {call_orig: Foo.new.orig, call_alias: Foo.new.myalias} )\r\n\r\n1.9.3 Output:\r\n\r\n    1.9.3\r\n    {:call_orig=&gt;{:callee=&gt;:orig, :method=&gt;:orig},\r\n     :call_alias=&gt;{:callee=&gt;:orig, :method=&gt;:orig}}\r\n\r\n2.1.2 Output (`__callee__` returns the aliased name, but `__method__` returns the name at the point the method was defined):\r\n\r\n    2.1.2\r\n    {:call_orig=&gt;{:callee=&gt;:orig, :method=&gt;:orig},\r\n     :call_alias=&gt;{:callee=&gt;:myalias, :method=&gt;:orig}}\r\n\r\n  [1]: http:\/\/ruby-doc.org\/core-1.9.3\/Kernel.html#method-i-__callee__\r\n  [2]: http:\/\/ruby-doc.org\/core-2.1.2\/Kernel.html#method-i-__callee__\r\n\r\n\r\n\r\n","body":"<p>Depending on what you actually want, you can use either <code>__method__<\/code> or <code>__callee__<\/code>, which return the currently executing method's name as a symbol.<\/p>\n\n<p>On ruby 1.9, both of them behave identically (as far as the <a href=\"http:\/\/ruby-doc.org\/core-1.9.3\/Kernel.html#method-i-__callee__\" rel=\"noreferrer\">docs<\/a> and my testing are concerned).<\/p>\n\n<p>On ruby 2.1 &amp; 2.2 <code>__callee__<\/code> behaves differently if you call an alias of the defined method. The <a href=\"http:\/\/ruby-doc.org\/core-2.1.2\/Kernel.html#method-i-__callee__\" rel=\"noreferrer\">docs<\/a> for the two are different:<\/p>\n\n<ul>\n<li><code>__method__<\/code>: \"the name at the definition of the current method\" (i.e. the name as it was defined)<\/li>\n<li><code>__callee__<\/code>: \"the called name of the current method\" (i.e. the name as it was called (invoked))<\/li>\n<\/ul>\n\n<p>Test script:<\/p>\n\n<pre><code>require 'pp'\nputs RUBY_VERSION\nclass Foo\n  def orig\n    {callee: __callee__, method: __method__}\n  end\n  alias_method :myalias, :orig\nend\npp( {call_orig: Foo.new.orig, call_alias: Foo.new.myalias} )\n<\/code><\/pre>\n\n<p>1.9.3 Output:<\/p>\n\n<pre><code>1.9.3\n{:call_orig=&gt;{:callee=&gt;:orig, :method=&gt;:orig},\n :call_alias=&gt;{:callee=&gt;:orig, :method=&gt;:orig}}\n<\/code><\/pre>\n\n<p>2.1.2 Output (<code>__callee__<\/code> returns the aliased name, but <code>__method__<\/code> returns the name at the point the method was defined):<\/p>\n\n<pre><code>2.1.2\n{:call_orig=&gt;{:callee=&gt;:orig, :method=&gt;:orig},\n :call_alias=&gt;{:callee=&gt;:myalias, :method=&gt;:orig}}\n<\/code><\/pre>\n","last_edit_date":1543255166.0,"community_owned_date":null},{"owner":{"account_id":7265,"reputation":12556,"user_id":12559,"user_type":"registered","accept_rate":77,"profile_image":"https:\/\/www.gravatar.com\/avatar\/bb381744942a5606750381a65f6c1c8c?s=256&d=identicon&r=PG","display_name":"Richard Turner","link":"https:\/\/stackoverflow.com\/users\/12559\/richard-turner"},"is_accepted":false,"score":36,"last_activity_date":1326973429,"creation_date":1223646760,"answer_id":191373,"question_id":191329,"content_license":"CC BY-SA 3.0","body_markdown":"Sounds like you&#39;re doing this:\r\n\r\n    0..10.to_a\r\n\r\nThe warning is from Fixnum#to\\_a, not from Range#to\\_a. Try this instead:\r\n\r\n    (0..10).to_a","body":"<p>Sounds like you're doing this:<\/p>\n\n<pre><code>0..10.to_a\n<\/code><\/pre>\n\n<p>The warning is from Fixnum#to_a, not from Range#to_a. Try this instead:<\/p>\n\n<pre><code>(0..10).to_a\n<\/code><\/pre>\n","last_edit_date":1326973429.0,"community_owned_date":null},{"owner":{"account_id":189509,"reputation":9990,"user_id":428876,"user_type":"registered","accept_rate":89,"profile_image":"https:\/\/www.gravatar.com\/avatar\/8740fb2a869928fd0c39531902a83477?s=256&d=identicon&r=PG","display_name":"Bayard Randel","link":"https:\/\/stackoverflow.com\/users\/428876\/bayard-randel"},"is_accepted":false,"score":36,"last_activity_date":1494335796,"creation_date":1279661462,"answer_id":3294528,"question_id":3294509,"content_license":"CC BY-SA 3.0","body_markdown":"Your first example,\r\n\r\n    @collection.each do |item|\r\n      # do whatever\r\n    end\r\n\r\n[is more idiomatic][1]. While Ruby supports looping constructs like `for` and `while`, the block syntax is generally preferred.\r\n\r\nAnother subtle difference is that any variable you declare within a `for` loop will be available outside the loop, whereas those within an iterator block are effectively private.\r\n\r\n  [1]: https:\/\/github.com\/bbatsov\/ruby-style-guide#no-for-loops","body":"<p>Your first example,<\/p>\n\n<pre><code>@collection.each do |item|\n  # do whatever\nend\n<\/code><\/pre>\n\n<p><a href=\"https:\/\/github.com\/bbatsov\/ruby-style-guide#no-for-loops\" rel=\"noreferrer\">is more idiomatic<\/a>. While Ruby supports looping constructs like <code>for<\/code> and <code>while<\/code>, the block syntax is generally preferred.<\/p>\n\n<p>Another subtle difference is that any variable you declare within a <code>for<\/code> loop will be available outside the loop, whereas those within an iterator block are effectively private.<\/p>\n","last_edit_date":1494335796.0,"community_owned_date":null},{"owner":{"account_id":2165679,"reputation":361,"user_id":1918839,"user_type":"unregistered","profile_image":"https:\/\/www.gravatar.com\/avatar\/e1d7539d25a2ffd667e60b8c8ae51394?s=256&d=identicon&r=PG","display_name":"ranjith kumar vengala","link":"https:\/\/stackoverflow.com\/users\/1918839\/ranjith-kumar-vengala"},"is_accepted":false,"score":36,"last_activity_date":1356007993,"creation_date":1356007993,"answer_id":13972656,"question_id":3500814,"content_license":"CC BY-SA 3.0","body_markdown":"try this code  `[&#39;12&#39;,&#39;34&#39;,&#39;35&#39;,&#39;231&#39;]*&quot;,&quot;`\r\n\r\nwill give you result **&quot;12,34,35,231&quot;**\r\n\r\nI hope this is the result you, let me know\r\n\r\n","body":"<p>try this code  <code>['12','34','35','231']*\",\"<\/code><\/p>\n\n<p>will give you result <strong>\"12,34,35,231\"<\/strong><\/p>\n\n<p>I hope this is the result you, let me know<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":4157377,"reputation":1376,"user_id":3408296,"user_type":"registered","accept_rate":54,"profile_image":"https:\/\/www.gravatar.com\/avatar\/5e7c742bcb3b0097e85fa1953edb86a8?s=256&d=identicon&r=PG&f=y&so-version=2","display_name":"Roobie","link":"https:\/\/stackoverflow.com\/users\/3408296\/roobie"},"is_accepted":false,"score":36,"last_activity_date":1664379060,"creation_date":1394631223,"answer_id":22353187,"question_id":5177634,"content_license":"CC BY-SA 4.0","body_markdown":"Both\r\n\r\n    gem query --local\r\n\r\nand\r\n\r\n     ruby -S gem list --local\r\n\r\nlist 69 entries\r\n\r\nWhile\r\n\r\n    ruby -e &#39;puts Gem::Specification.all_names&#39;\r\n\r\nreturn 82\r\n\r\nI used `wc -l` to get the numbers. Not sure if that is the right way to check. Tried to redirect the output to text files and diffed but that didn&#39;t help - will need to compare manually one by one.","body":"<p>Both<\/p>\n<pre><code>gem query --local\n<\/code><\/pre>\n<p>and<\/p>\n<pre><code> ruby -S gem list --local\n<\/code><\/pre>\n<p>list 69 entries<\/p>\n<p>While<\/p>\n<pre><code>ruby -e 'puts Gem::Specification.all_names'\n<\/code><\/pre>\n<p>return 82<\/p>\n<p>I used <code>wc -l<\/code> to get the numbers. Not sure if that is the right way to check. Tried to redirect the output to text files and diffed but that didn't help - will need to compare manually one by one.<\/p>\n","last_edit_date":1664379060.0,"community_owned_date":null},{"owner":{"account_id":12436,"reputation":27575,"user_id":24468,"user_type":"registered","accept_rate":100,"profile_image":"https:\/\/i.stack.imgur.com\/PWl6C.png?s=256&g=1","display_name":"akuhn","link":"https:\/\/stackoverflow.com\/users\/24468\/akuhn"},"is_accepted":false,"score":36,"last_activity_date":1527877755,"creation_date":1482713679,"answer_id":41325569,"question_id":6245929,"content_license":"CC BY-SA 4.0","body_markdown":"Avoid `any?` for large arrays.\r\n\r\n- `any?` is `O(n)`\r\n- `empty?` is `O(1)`\r\n\r\n`any?` does not check the length but actually scans the whole array for truthy elements.\r\n\r\n    static VALUE\r\n    rb_ary_any_p(VALUE ary)\r\n    {\r\n      long i, len = RARRAY_LEN(ary);\r\n      const VALUE *ptr = RARRAY_CONST_PTR(ary);\r\n    \r\n      if (!len) return Qfalse;\r\n      if (!rb_block_given_p()) {\r\n    \tfor (i = 0; i &lt; len; ++i) if (RTEST(ptr[i])) return Qtrue;\r\n      }\r\n      else {\r\n    \tfor (i = 0; i &lt; RARRAY_LEN(ary); ++i) {\r\n    \t    if (RTEST(rb_yield(RARRAY_AREF(ary, i)))) return Qtrue;\r\n    \t}\r\n      }\r\n      return Qfalse;\r\n    }\r\n\r\n`empty?` on the other hand checks the length of the array only.\r\n\r\n    static VALUE\r\n    rb_ary_empty_p(VALUE ary)\r\n    {\r\n      if (RARRAY_LEN(ary) == 0)\r\n    \treturn Qtrue;\r\n      return Qfalse;\r\n    }\r\n\r\n\r\nThe difference is relevant if you have &quot;sparse&quot; arrays that start with lots of `nil` values, like for example an array that was just created.","body":"<p>Avoid <code>any?<\/code> for large arrays.<\/p>\n\n<ul>\n<li><code>any?<\/code> is <code>O(n)<\/code><\/li>\n<li><code>empty?<\/code> is <code>O(1)<\/code><\/li>\n<\/ul>\n\n<p><code>any?<\/code> does not check the length but actually scans the whole array for truthy elements.<\/p>\n\n<pre><code>static VALUE\nrb_ary_any_p(VALUE ary)\n{\n  long i, len = RARRAY_LEN(ary);\n  const VALUE *ptr = RARRAY_CONST_PTR(ary);\n\n  if (!len) return Qfalse;\n  if (!rb_block_given_p()) {\n    for (i = 0; i &lt; len; ++i) if (RTEST(ptr[i])) return Qtrue;\n  }\n  else {\n    for (i = 0; i &lt; RARRAY_LEN(ary); ++i) {\n        if (RTEST(rb_yield(RARRAY_AREF(ary, i)))) return Qtrue;\n    }\n  }\n  return Qfalse;\n}\n<\/code><\/pre>\n\n<p><code>empty?<\/code> on the other hand checks the length of the array only.<\/p>\n\n<pre><code>static VALUE\nrb_ary_empty_p(VALUE ary)\n{\n  if (RARRAY_LEN(ary) == 0)\n    return Qtrue;\n  return Qfalse;\n}\n<\/code><\/pre>\n\n<p>The difference is relevant if you have \"sparse\" arrays that start with lots of <code>nil<\/code> values, like for example an array that was just created.<\/p>\n","last_edit_date":1527877755.0,"community_owned_date":null},{"owner":{"account_id":2667036,"reputation":3999,"user_id":2305243,"user_type":"registered","accept_rate":100,"profile_image":"https:\/\/i.stack.imgur.com\/zRq7V.jpg?s=256&g=1","display_name":"Alan Dong","link":"https:\/\/stackoverflow.com\/users\/2305243\/alan-dong"},"is_accepted":false,"score":36,"last_activity_date":1538479389,"creation_date":1487372156,"answer_id":42308805,"question_id":3827874,"content_license":"CC BY-SA 4.0","body_markdown":"From what I know\r\n\r\n3 one-liners\r\n\r\n1. `a = 10 if &lt;condition&gt;`\r\n\r\nexample: \r\n\r\n    a = 10 if true # a = 10\r\n    b = 10 if false # b = nil\r\n\r\n\r\n2. `a = 10 unless &lt;condition&gt;`\r\n\r\nexample:\r\n\r\n    a = 10 unless false # a = 10\r\n    b = 10 unless true # b = nil\r\n\r\n3. `a = &lt;condition&gt; ? &lt;a&gt; : &lt;b&gt;`\r\n\r\nexample:\r\n\r\n    a = true ? 10 : 100 # a = 10\r\n    a = false ? 10 : 100 # a = 100\r\n\r\nI hope it helps.","body":"<p>From what I know<\/p>\n\n<p>3 one-liners<\/p>\n\n<ol>\n<li><code>a = 10 if &lt;condition&gt;<\/code><\/li>\n<\/ol>\n\n<p>example: <\/p>\n\n<pre><code>a = 10 if true # a = 10\nb = 10 if false # b = nil\n<\/code><\/pre>\n\n<ol start=\"2\">\n<li><code>a = 10 unless &lt;condition&gt;<\/code><\/li>\n<\/ol>\n\n<p>example:<\/p>\n\n<pre><code>a = 10 unless false # a = 10\nb = 10 unless true # b = nil\n<\/code><\/pre>\n\n<ol start=\"3\">\n<li><code>a = &lt;condition&gt; ? &lt;a&gt; : &lt;b&gt;<\/code><\/li>\n<\/ol>\n\n<p>example:<\/p>\n\n<pre><code>a = true ? 10 : 100 # a = 10\na = false ? 10 : 100 # a = 100\n<\/code><\/pre>\n\n<p>I hope it helps.<\/p>\n","last_edit_date":1538479389.0,"community_owned_date":null},{"owner":{"account_id":1561548,"reputation":599,"user_id":1451314,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/85a0cece696fc06ed6457d53224d8161?s=256&d=identicon&r=PG","display_name":"JjP","link":"https:\/\/stackoverflow.com\/users\/1451314\/jjp"},"is_accepted":false,"score":35,"last_activity_date":1372924923,"creation_date":1372921345,"answer_id":17463812,"question_id":8921999,"content_license":"CC BY-SA 3.0","body_markdown":"`detect` only finds one duplicate. `find_all` will find them all:\r\n\r\n    a = [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;B&quot;, &quot;A&quot;]\r\n    a.find_all { |e| a.count(e) &gt; 1 }","body":"<p><code>detect<\/code> only finds one duplicate. <code>find_all<\/code> will find them all:<\/p>\n\n<pre><code>a = [\"A\", \"B\", \"C\", \"B\", \"A\"]\na.find_all { |e| a.count(e) &gt; 1 }\n<\/code><\/pre>\n","last_edit_date":1372924923.0,"community_owned_date":null},{"owner":{"account_id":2608652,"reputation":3587,"user_id":2259237,"user_type":"registered","accept_rate":100,"profile_image":"https:\/\/www.gravatar.com\/avatar\/1a85077190b4ee090e7e1495ee556384?s=256&d=identicon&r=PG","display_name":"rderoldan1","link":"https:\/\/stackoverflow.com\/users\/2259237\/rderoldan1"},"is_accepted":false,"score":35,"last_activity_date":1416494361,"creation_date":1416494361,"answer_id":27042257,"question_id":27041885,"content_license":"CC BY-SA 3.0","body_markdown":"As the instruction said `&quot;might need gpg2&quot;`\r\n \r\nIn mac, you can try install it with homebrew\r\n\r\n    $ brew install gpg2 ","body":"<p>As the instruction said <code>\"might need gpg2\"<\/code><\/p>\n\n<p>In mac, you can try install it with homebrew<\/p>\n\n<pre><code>$ brew install gpg2 \n<\/code><\/pre>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":242548,"reputation":1778,"user_id":514131,"user_type":"registered","accept_rate":100,"profile_image":"https:\/\/www.gravatar.com\/avatar\/37db15c3b357d638541d3e77db2c9c20?s=256&d=identicon&r=PG","display_name":"opes","link":"https:\/\/stackoverflow.com\/users\/514131\/opes"},"is_accepted":false,"score":35,"last_activity_date":1479340826,"creation_date":1479340826,"answer_id":40644520,"question_id":38797458,"content_license":"CC BY-SA 3.0","body_markdown":"I ran into this issue and followed all the same commands as above, even going so far as to remove all my previously installed Ruby versions. However, the error persisted.\r\n\r\nTurns out, there were some leftover gems for the various (previously uninstalled) versions in `~\/.gem\/ruby\/`. After removing the folders I no longer used, the errors disappeared.","body":"<p>I ran into this issue and followed all the same commands as above, even going so far as to remove all my previously installed Ruby versions. However, the error persisted.<\/p>\n\n<p>Turns out, there were some leftover gems for the various (previously uninstalled) versions in <code>~\/.gem\/ruby\/<\/code>. After removing the folders I no longer used, the errors disappeared.<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":11213,"reputation":2059,"user_id":21512,"user_type":"registered","accept_rate":48,"profile_image":"https:\/\/www.gravatar.com\/avatar\/6343d4d073c5c9309ffc802b1150f258?s=256&d=identicon&r=PG","display_name":"Richard Hurt","link":"https:\/\/stackoverflow.com\/users\/21512\/richard-hurt"},"is_accepted":false,"score":34,"last_activity_date":1479306059,"creation_date":1231690230,"answer_id":433127,"question_id":165170,"content_license":"CC BY-SA 3.0","body_markdown":"Taking Patrick McKenzie&#39;s answer just a bit further, you could create a new file in your `config\/initializers` directory called `date_format.rb` (or whatever you want) and put this in it:\r\n\r\n    Time::DATE_FORMATS.merge!(\r\n      my_date: lambda { |time| time.strftime(&quot;%a, %b #{time.day.ordinalize}&quot;) }\r\n    )\r\n\r\nThen in your view code you can format any date simply by assigning it your new date format:\r\n\r\n    My Date: &lt;%= h some_date.to_s(:my_date) %&gt;\r\n\r\nIt&#39;s simple, it works, and is easy to build on.  Just add more format lines in the date_format.rb file for each of your different date formats.  Here is a more fleshed out example.\r\n\r\n    Time::DATE_FORMATS.merge!(\r\n       datetime_military: &#39;%Y-%m-%d %H:%M&#39;,\r\n       datetime:          &#39;%Y-%m-%d %I:%M%P&#39;,\r\n       time:              &#39;%I:%M%P&#39;,\r\n       time_military:     &#39;%H:%M%P&#39;,\r\n       datetime_short:    &#39;%m\/%d %I:%M&#39;,\r\n       due_date: lambda { |time| time.strftime(&quot;%a, %b #{time.day.ordinalize}&quot;) }\r\n    )\r\n\r\n","body":"<p>Taking Patrick McKenzie's answer just a bit further, you could create a new file in your <code>config\/initializers<\/code> directory called <code>date_format.rb<\/code> (or whatever you want) and put this in it:<\/p>\n\n<pre><code>Time::DATE_FORMATS.merge!(\n  my_date: lambda { |time| time.strftime(\"%a, %b #{time.day.ordinalize}\") }\n)\n<\/code><\/pre>\n\n<p>Then in your view code you can format any date simply by assigning it your new date format:<\/p>\n\n<pre><code>My Date: &lt;%= h some_date.to_s(:my_date) %&gt;\n<\/code><\/pre>\n\n<p>It's simple, it works, and is easy to build on.  Just add more format lines in the date_format.rb file for each of your different date formats.  Here is a more fleshed out example.<\/p>\n\n<pre><code>Time::DATE_FORMATS.merge!(\n   datetime_military: '%Y-%m-%d %H:%M',\n   datetime:          '%Y-%m-%d %I:%M%P',\n   time:              '%I:%M%P',\n   time_military:     '%H:%M%P',\n   datetime_short:    '%m\/%d %I:%M',\n   due_date: lambda { |time| time.strftime(\"%a, %b #{time.day.ordinalize}\") }\n)\n<\/code><\/pre>\n","last_edit_date":1479306059.0,"community_owned_date":null},{"owner":{"account_id":85671,"reputation":40920,"user_id":238704,"user_type":"registered","profile_image":"https:\/\/i.stack.imgur.com\/VgOZI.png?s=256&g=1","display_name":"President James K. Polk","link":"https:\/\/stackoverflow.com\/users\/238704\/president-james-k-polk"},"is_accepted":false,"score":34,"last_activity_date":1269705033,"creation_date":1269705033,"answer_id":2529889,"question_id":2529852,"content_license":"CC BY-SA 2.5","body_markdown":"Writing code is slow. Reading code is slow. Finding and fixing bugs is slow. Adding features and enhancements is slow. Anything that improves on the previous is a win. Very rarely is execution performance an issue.","body":"<p>Writing code is slow. Reading code is slow. Finding and fixing bugs is slow. Adding features and enhancements is slow. Anything that improves on the previous is a win. Very rarely is execution performance an issue.<\/p>\n","last_edit_date":null,"community_owned_date":1269705033.0},{"owner":{"account_id":77611,"reputation":557,"user_id":221392,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/e9ca87600f9c4b8836d44263e04ed3c7?s=256&d=identicon&r=PG","display_name":"skryl","link":"https:\/\/stackoverflow.com\/users\/221392\/skryl"},"is_accepted":false,"score":34,"last_activity_date":1455127753,"creation_date":1342215381,"answer_id":11478718,"question_id":1177594,"content_license":"CC BY-SA 3.0","body_markdown":"The use cases for the two are quite different. \r\n\r\nYou can think of the Struct class in Ruby 1.9 as an equivalent to the `struct` declaration in C. In Ruby `Struct.new` takes a set of field names as arguments and returns a new Class. Similarly, in C, a `struct` declaration takes a set of fields and allows the programmer to use the new complex type just like he would any built-in type.\r\n\r\nRuby:\r\n\r\n   \r\n    Newtype = Struct.new(:data1, :data2)\r\n    n = Newtype.new\r\n\r\nC:\r\n\r\n    typedef struct {\r\n      int data1;\r\n      char data2;\r\n    } newtype;\r\n   \r\n    newtype n;\r\n\r\n\r\nThe OpenStruct class can be compared to an anonymous struct declaration in C. It allows the programmer to create an *instance* of a complex type. \r\n\r\n\r\nRuby:\r\n\r\n    o = OpenStruct.new(data1: 0, data2: 0) \r\n    o.data1 = 1\r\n    o.data2 = 2\r\n\r\nC:\r\n\r\n    struct {\r\n      int data1;\r\n      char data2;\r\n    } o;\r\n       \r\n    o.data1 = 1;\r\n    o.data2 = 2;\r\n\r\n\r\nHere are some common use cases.\r\n\r\nOpenStructs can be used to easily convert hashes to one-off objects which respond to all the hash keys.\r\n\r\n    h = { a: 1, b: 2 }\r\n    o = OpenStruct.new(h)\r\n    o.a = 1\r\n    o.b = 2\r\n\r\nStructs can be useful for shorthand class definitions.\r\n\r\n    class MyClass &lt; Struct.new(:a,:b,:c)\r\n    end\r\n    \r\n    m = MyClass.new\r\n    m.a = 1","body":"<p>The use cases for the two are quite different. <\/p>\n\n<p>You can think of the Struct class in Ruby 1.9 as an equivalent to the <code>struct<\/code> declaration in C. In Ruby <code>Struct.new<\/code> takes a set of field names as arguments and returns a new Class. Similarly, in C, a <code>struct<\/code> declaration takes a set of fields and allows the programmer to use the new complex type just like he would any built-in type.<\/p>\n\n<p>Ruby:<\/p>\n\n<pre><code>Newtype = Struct.new(:data1, :data2)\nn = Newtype.new\n<\/code><\/pre>\n\n<p>C:<\/p>\n\n<pre><code>typedef struct {\n  int data1;\n  char data2;\n} newtype;\n\nnewtype n;\n<\/code><\/pre>\n\n<p>The OpenStruct class can be compared to an anonymous struct declaration in C. It allows the programmer to create an <em>instance<\/em> of a complex type. <\/p>\n\n<p>Ruby:<\/p>\n\n<pre><code>o = OpenStruct.new(data1: 0, data2: 0) \no.data1 = 1\no.data2 = 2\n<\/code><\/pre>\n\n<p>C:<\/p>\n\n<pre><code>struct {\n  int data1;\n  char data2;\n} o;\n\no.data1 = 1;\no.data2 = 2;\n<\/code><\/pre>\n\n<p>Here are some common use cases.<\/p>\n\n<p>OpenStructs can be used to easily convert hashes to one-off objects which respond to all the hash keys.<\/p>\n\n<pre><code>h = { a: 1, b: 2 }\no = OpenStruct.new(h)\no.a = 1\no.b = 2\n<\/code><\/pre>\n\n<p>Structs can be useful for shorthand class definitions.<\/p>\n\n<pre><code>class MyClass &lt; Struct.new(:a,:b,:c)\nend\n\nm = MyClass.new\nm.a = 1\n<\/code><\/pre>\n","last_edit_date":1455127753.0,"community_owned_date":null},{"owner":{"account_id":2307084,"reputation":1228,"user_id":2072191,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/53745d44946bc89e89c5e16b565d1a05?s=256&d=identicon&r=PG","display_name":"Denny Abraham Cheriyan","link":"https:\/\/stackoverflow.com\/users\/2072191\/denny-abraham-cheriyan"},"is_accepted":false,"score":34,"last_activity_date":1380419001,"creation_date":1380419001,"answer_id":19073578,"question_id":6245929,"content_license":"CC BY-SA 3.0","body_markdown":"Prefixing the statement with an exclamation mark will let you know whether the array is not empty. So in your case - \r\n\r\n    a = [1,2,3]\r\n    !a.empty?\r\n    =&gt; true\r\n\r\n","body":"<p>Prefixing the statement with an exclamation mark will let you know whether the array is not empty. So in your case - <\/p>\n\n<pre><code>a = [1,2,3]\n!a.empty?\n=&gt; true\n<\/code><\/pre>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":4429723,"reputation":10169,"user_id":3607136,"user_type":"registered","accept_rate":84,"profile_image":"https:\/\/i.stack.imgur.com\/NRFso.jpg?s=256&g=1","display_name":"Gagan Gami","link":"https:\/\/stackoverflow.com\/users\/3607136\/gagan-gami"},"is_accepted":false,"score":34,"last_activity_date":1472713699,"creation_date":1404895524,"answer_id":24649072,"question_id":420352,"content_license":"CC BY-SA 3.0","body_markdown":"For **Rails 4 and above version:** \r\n\r\nYou can try something like this If you want **first oldest entry**\r\n\r\n    YourModel.order(id: :asc).limit(5).each do |d|\r\n\r\n&lt;hr&gt;\r\n\r\n\r\nYou can try something like this if you want **last latest entries**..\r\n\r\n    YourModel.order(id: :desc).limit(5).each do |d|","body":"<p>For <strong>Rails 4 and above version:<\/strong> <\/p>\n\n<p>You can try something like this If you want <strong>first oldest entry<\/strong><\/p>\n\n<pre><code>YourModel.order(id: :asc).limit(5).each do |d|\n<\/code><\/pre>\n\n<hr>\n\n<p>You can try something like this if you want <strong>last latest entries<\/strong>..<\/p>\n\n<pre><code>YourModel.order(id: :desc).limit(5).each do |d|\n<\/code><\/pre>\n","last_edit_date":1472713699.0,"community_owned_date":null},{"owner":{"account_id":6121757,"reputation":469,"user_id":4775075,"user_type":"registered","profile_image":"https:\/\/lh4.googleusercontent.com\/--r2FXnoJbH0\/AAAAAAAAAAI\/AAAAAAAAAC0\/zLkkemoqxQ0\/photo.jpg?sz=256","display_name":"David Foley","link":"https:\/\/stackoverflow.com\/users\/4775075\/david-foley"},"is_accepted":false,"score":34,"last_activity_date":1514480638,"creation_date":1514480638,"answer_id":48011446,"question_id":36228873,"content_license":"CC BY-SA 3.0","body_markdown":"&lt;p&gt;Don&#39;t think too much:&lt;\/p&gt;\r\n    bool_or_string.to_s == &quot;true&quot;  \r\n\r\n&lt;p&gt;So,&lt;\/p&gt;\r\n\r\n    &quot;true&quot;.to_s == &quot;true&quot;   #true\r\n    &quot;false&quot;.to_s == &quot;true&quot;  #false \r\n    true.to_s == &quot;true&quot;     #true\r\n    false.to_s == &quot;true&quot;    #false\r\n\r\n&lt;p&gt;You could also add &quot;.downcase,&quot; if you are worried about capital letters.&lt;\/p&gt;\r\n\r\n \r\n\r\n\r\n","body":"<p>Don't think too much:<\/p>\n\n<pre><code>bool_or_string.to_s == \"true\"  \n<\/code><\/pre>\n\n<p>So,<\/p>\n\n<pre><code>\"true\".to_s == \"true\"   #true\n\"false\".to_s == \"true\"  #false \ntrue.to_s == \"true\"     #true\nfalse.to_s == \"true\"    #false\n<\/code><\/pre>\n\n<p>You could also add \".downcase,\" if you are worried about capital letters.<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":3735857,"reputation":4265,"user_id":3106816,"user_type":"registered","accept_rate":38,"profile_image":"https:\/\/i.stack.imgur.com\/LDdbB.jpg?s=256&g=1","display_name":"Jigar Bhatt","link":"https:\/\/stackoverflow.com\/users\/3106816\/jigar-bhatt"},"is_accepted":false,"score":34,"last_activity_date":1584685845,"creation_date":1584685845,"answer_id":60769537,"question_id":36228873,"content_license":"CC BY-SA 4.0","body_markdown":"**Working in Rails 5**\r\n\r\n    ActiveModel::Type::Boolean.new.cast(&#39;t&#39;)     # =&gt; true\r\n    ActiveModel::Type::Boolean.new.cast(&#39;true&#39;)  # =&gt; true\r\n    ActiveModel::Type::Boolean.new.cast(true)    # =&gt; true\r\n    ActiveModel::Type::Boolean.new.cast(&#39;1&#39;)     # =&gt; true\r\n    ActiveModel::Type::Boolean.new.cast(&#39;f&#39;)     # =&gt; false\r\n    ActiveModel::Type::Boolean.new.cast(&#39;0&#39;)     # =&gt; false\r\n    ActiveModel::Type::Boolean.new.cast(&#39;false&#39;) # =&gt; false\r\n    ActiveModel::Type::Boolean.new.cast(false)   # =&gt; false\r\n    ActiveModel::Type::Boolean.new.cast(nil)     # =&gt; nil","body":"<p><strong>Working in Rails 5<\/strong><\/p>\n\n<pre><code>ActiveModel::Type::Boolean.new.cast('t')     # =&gt; true\nActiveModel::Type::Boolean.new.cast('true')  # =&gt; true\nActiveModel::Type::Boolean.new.cast(true)    # =&gt; true\nActiveModel::Type::Boolean.new.cast('1')     # =&gt; true\nActiveModel::Type::Boolean.new.cast('f')     # =&gt; false\nActiveModel::Type::Boolean.new.cast('0')     # =&gt; false\nActiveModel::Type::Boolean.new.cast('false') # =&gt; false\nActiveModel::Type::Boolean.new.cast(false)   # =&gt; false\nActiveModel::Type::Boolean.new.cast(nil)     # =&gt; nil\n<\/code><\/pre>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":337,"reputation":88203,"user_id":422,"user_type":"registered","accept_rate":98,"profile_image":"https:\/\/www.gravatar.com\/avatar\/d3a0edc111d09d96513f737960c67a29?s=256&d=identicon&r=PG","display_name":"Chris Bunch","link":"https:\/\/stackoverflow.com\/users\/422\/chris-bunch"},"is_accepted":false,"score":33,"last_activity_date":1575660300,"creation_date":1319694031,"answer_id":7912086,"question_id":7911669,"content_license":"CC BY-SA 4.0","body_markdown":"Try using `&quot;w+&quot;` as the write mode instead of just `&quot;w&quot;`:\r\n\r\n    File.open(&quot;out.txt&quot;, &quot;w+&quot;) { |file| file.write(&quot;boo!&quot;) }\r\n","body":"<p>Try using <code>\"w+\"<\/code> as the write mode instead of just <code>\"w\"<\/code>:<\/p>\n\n<pre><code>File.open(\"out.txt\", \"w+\") { |file| file.write(\"boo!\") }\n<\/code><\/pre>\n","last_edit_date":1575660300.0,"community_owned_date":null},{"owner":{"account_id":2594766,"reputation":438,"user_id":2248703,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/db7ce5848c228911522643db0b5599b5?s=256&d=identicon&r=PG","display_name":"roamingthings","link":"https:\/\/stackoverflow.com\/users\/2248703\/roamingthings"},"is_accepted":false,"score":33,"last_activity_date":1440640043,"creation_date":1375854277,"answer_id":18095508,"question_id":16258911,"content_license":"CC BY-SA 3.0","body_markdown":"I don&#39;t think it&#39;s good to generally turn off CSRF protection as long as you don&#39;t exclusively implement an API.\r\n\r\nWhen looking at the Rails 4 API documentation for [ActionController][1] I found that you can turn off forgery protection on a per controller or per method base.\r\n\r\nFor example to turn off CSRF protection for methods you can use\r\n\r\n    class FooController &lt; ApplicationController\r\n      protect_from_forgery except: :index\r\n\r\n  [1]: http:\/\/api.rubyonrails.org\/classes\/ActionController\/RequestForgeryProtection\/ClassMethods.html","body":"<p>I don't think it's good to generally turn off CSRF protection as long as you don't exclusively implement an API.<\/p>\n\n<p>When looking at the Rails 4 API documentation for <a href=\"http:\/\/api.rubyonrails.org\/classes\/ActionController\/RequestForgeryProtection\/ClassMethods.html\">ActionController<\/a> I found that you can turn off forgery protection on a per controller or per method base.<\/p>\n\n<p>For example to turn off CSRF protection for methods you can use<\/p>\n\n<pre><code>class FooController &lt; ApplicationController\n  protect_from_forgery except: :index\n<\/code><\/pre>\n","last_edit_date":1440640043.0,"community_owned_date":null},{"owner":{"account_id":10030575,"reputation":438,"user_id":7418896,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/820fc6eb67e6b2ee3dc543496c6d28bb?s=256&d=identicon&r=PG&f=y&so-version=2","display_name":"Evgeniy28","link":"https:\/\/stackoverflow.com\/users\/7418896\/evgeniy28"},"is_accepted":false,"score":33,"last_activity_date":1503518089,"creation_date":1497881014,"answer_id":44632724,"question_id":39494672,"content_license":"CC BY-SA 3.0","body_markdown":"macOs Sierra:\r\n\r\n    brew uninstall imagemagick\r\n    brew install imagemagick@6\r\n    brew link imagemagick@6 --force","body":"<p>macOs Sierra:<\/p>\n\n<pre><code>brew uninstall imagemagick\nbrew install imagemagick@6\nbrew link imagemagick@6 --force\n<\/code><\/pre>\n","last_edit_date":1503518089.0,"community_owned_date":null},{"owner":{"account_id":2218447,"reputation":684,"user_id":1958511,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/464977ca8ea40fc0dee0e4b6f6a22995?s=256&d=identicon&r=PG","display_name":"Frank C. Schuetz","link":"https:\/\/stackoverflow.com\/users\/1958511\/frank-c-schuetz"},"is_accepted":false,"score":32,"last_activity_date":1358276133,"creation_date":1358276133,"answer_id":14344859,"question_id":1542945,"content_license":"CC BY-SA 3.0","body_markdown":"For modules that can be tested in isolation or by mocking the class, I like something along the lines of:\r\n\r\nmodule:\r\n\r\n    module MyModule\r\n      def hallo\r\n        &quot;hallo&quot;\r\n      end\r\n    end\r\n\r\nspec:\r\n\r\n    describe MyModule do\r\n      include MyModule\r\n\r\n      it { hallo.should == &quot;hallo&quot; }\r\n    end\r\n\r\nIt might seem wrong to hijack nested example groups, but I like the terseness. Any thoughts?\r\n\r\n\r\n\r\n\r\n\r\n\r\n","body":"<p>For modules that can be tested in isolation or by mocking the class, I like something along the lines of:<\/p>\n\n<p>module:<\/p>\n\n<pre><code>module MyModule\n  def hallo\n    \"hallo\"\n  end\nend\n<\/code><\/pre>\n\n<p>spec:<\/p>\n\n<pre><code>describe MyModule do\n  include MyModule\n\n  it { hallo.should == \"hallo\" }\nend\n<\/code><\/pre>\n\n<p>It might seem wrong to hijack nested example groups, but I like the terseness. Any thoughts?<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":351300,"reputation":47694,"user_id":687677,"user_type":"registered","accept_rate":62,"profile_image":"https:\/\/www.gravatar.com\/avatar\/3508c1a7c3c72bfa9219b3699599687f?s=256&d=identicon&r=PG","display_name":"superluminary","link":"https:\/\/stackoverflow.com\/users\/687677\/superluminary"},"is_accepted":false,"score":32,"last_activity_date":1383127126,"creation_date":1362497276,"answer_id":15227641,"question_id":2515931,"content_license":"CC BY-SA 3.0","body_markdown":"If you&#39;re using PaperClip, downloading from a URL is now handled automatically. \r\n\r\nAssuming you&#39;ve got something like:\r\n\r\n    class MyModel &lt; ActiveRecord::Base\r\n      has_attached_file :image, ...\r\n    end\r\n\r\nOn your model, just specify the image as a URL, something like this (written in deliberate longhand):\r\n\r\n    @my_model = MyModel.new\r\n    image_url = params[:image_url]\r\n    @my_model.image = URI.parse(image_url)\r\n\r\nYou&#39;ll probably want to put this in a method in your model. This will also work just fine on Heroku&#39;s temporary filesystem.\r\n\r\nPaperclip will take it from there.\r\n\r\nsource: [paperclip documentation][1]\r\n\r\n\r\n  [1]: https:\/\/github.com\/thoughtbot\/paperclip\/wiki\/Attachment-downloaded-from-a-URL","body":"<p>If you're using PaperClip, downloading from a URL is now handled automatically. <\/p>\n\n<p>Assuming you've got something like:<\/p>\n\n<pre><code>class MyModel &lt; ActiveRecord::Base\n  has_attached_file :image, ...\nend\n<\/code><\/pre>\n\n<p>On your model, just specify the image as a URL, something like this (written in deliberate longhand):<\/p>\n\n<pre><code>@my_model = MyModel.new\nimage_url = params[:image_url]\n@my_model.image = URI.parse(image_url)\n<\/code><\/pre>\n\n<p>You'll probably want to put this in a method in your model. This will also work just fine on Heroku's temporary filesystem.<\/p>\n\n<p>Paperclip will take it from there.<\/p>\n\n<p>source: <a href=\"https:\/\/github.com\/thoughtbot\/paperclip\/wiki\/Attachment-downloaded-from-a-URL\">paperclip documentation<\/a><\/p>\n","last_edit_date":1383127126.0,"community_owned_date":null},{"owner":{"account_id":1545514,"reputation":12807,"user_id":1439143,"user_type":"registered","accept_rate":52,"profile_image":"https:\/\/i.stack.imgur.com\/M1T0O.jpg?s=256&g=1","display_name":"Joshua Muheim","link":"https:\/\/stackoverflow.com\/users\/1439143\/joshua-muheim"},"is_accepted":false,"score":32,"last_activity_date":1393673036,"creation_date":1393671776,"answer_id":22113489,"question_id":5069677,"content_license":"CC BY-SA 3.0","body_markdown":"As of RSpec 2.4 (I guess) you can prepend an `f` or `x` to `it`, `specify`, `describe` and `context`:\r\n\r\n    fit &#39;run only this example&#39; do ... end\r\n    xit &#39;do not run this example&#39; do ... end\r\n\r\nhttp:\/\/rdoc.info\/github\/rspec\/rspec-core\/RSpec\/Core\/ExampleGroup#fit-class_method\r\nhttp:\/\/rdoc.info\/github\/rspec\/rspec-core\/RSpec\/Core\/ExampleGroup#xit-class_method\r\n\r\nBe sure to have `config.filter_run focus: true` and `config.run_all_when_everything_filtered = true` in your `spec_helper.rb`.","body":"<p>As of RSpec 2.4 (I guess) you can prepend an <code>f<\/code> or <code>x<\/code> to <code>it<\/code>, <code>specify<\/code>, <code>describe<\/code> and <code>context<\/code>:<\/p>\n\n<pre><code>fit 'run only this example' do ... end\nxit 'do not run this example' do ... end\n<\/code><\/pre>\n\n<p><a href=\"http:\/\/rdoc.info\/github\/rspec\/rspec-core\/RSpec\/Core\/ExampleGroup#fit-class_method\" rel=\"noreferrer\">http:\/\/rdoc.info\/github\/rspec\/rspec-core\/RSpec\/Core\/ExampleGroup#fit-class_method<\/a>\n<a href=\"http:\/\/rdoc.info\/github\/rspec\/rspec-core\/RSpec\/Core\/ExampleGroup#xit-class_method\" rel=\"noreferrer\">http:\/\/rdoc.info\/github\/rspec\/rspec-core\/RSpec\/Core\/ExampleGroup#xit-class_method<\/a><\/p>\n\n<p>Be sure to have <code>config.filter_run focus: true<\/code> and <code>config.run_all_when_everything_filtered = true<\/code> in your <code>spec_helper.rb<\/code>.<\/p>\n","last_edit_date":1393673036.0,"community_owned_date":null},{"owner":{"account_id":94036,"reputation":107946,"user_id":256970,"user_type":"registered","accept_rate":86,"profile_image":"https:\/\/i.stack.imgur.com\/sC03e.jpg?s=256&g=1","display_name":"Cary Swoveland","link":"https:\/\/stackoverflow.com\/users\/256970\/cary-swoveland"},"is_accepted":false,"score":32,"last_activity_date":1547062205,"creation_date":1436596874,"answer_id":31354262,"question_id":8921999,"content_license":"CC BY-SA 4.0","body_markdown":"Here are two more ways of finding a duplicate.\r\n\r\n**Use a set**\r\n\r\n    require &#39;set&#39;\r\n\r\n    def find_a_dup_using_set(arr)\r\n      s = Set.new\r\n      arr.find { |e| !s.add?(e) }\r\n    end\r\n\r\n    find_a_dup_using_set arr\r\n      #=&gt; &quot;hello&quot; \r\n    \r\nUse `select` in place of `find` to return an array of all duplicates.\r\n    \r\n**Use `Array#difference`**\r\n\r\n    class Array\r\n      def difference(other)\r\n        h = other.each_with_object(Hash.new(0)) { |e,h| h[e] += 1 }\r\n        reject { |e| h[e] &gt; 0 &amp;&amp; h[e] -= 1 }\r\n      end\r\n    end\r\n\r\n    def find_a_dup_using_difference(arr)\r\n      arr.difference(arr.uniq).first\r\n    end\r\n\r\n    find_a_dup_using_difference arr\r\n      #=&gt; &quot;hello&quot; \r\n\r\nDrop `.first` to return an array of all duplicates.\r\n\r\nBoth methods return `nil` if there are no duplicates.\r\n\r\nI [proposed that `Array#difference`](https:\/\/bugs.ruby-lang.org\/issues\/11815) be added to the Ruby core. More information is in my answer [here](https:\/\/stackoverflow.com\/questions\/24987054\/how-to-select-unique-elements).\r\n\r\n**Benchmark**\r\n\r\nLet&#39;s compare suggested methods. First, we need an array for testing:\r\n\r\n    CAPS = (&#39;AAA&#39;..&#39;ZZZ&#39;).to_a.first(10_000)\r\n    def test_array(nelements, ndups)\r\n      arr = CAPS[0, nelements-ndups]\r\n      arr = arr.concat(arr[0,ndups]).shuffle\r\n    end\r\n\r\nand a method to run the benchmarks for different test arrays:\r\n\r\n    require &#39;fruity&#39;\r\n    \r\n    def benchmark(nelements, ndups)\r\n      arr = test_array nelements, ndups\r\n      puts &quot;\\n#{ndups} duplicates\\n&quot;    \r\n      compare(\r\n        Naveed:    -&gt; {arr.detect{|e| arr.count(e) &gt; 1}},\r\n        Sergio:    -&gt; {(arr.inject(Hash.new(0)) {|h,e| h[e] += 1; h}.find {|k,v| v &gt; 1} ||\r\n                         [nil]).first },\r\n        Ryan:      -&gt; {(arr.group_by{|e| e}.find {|k,v| v.size &gt; 1} ||\r\n                         [nil]).first},\r\n        Chris:     -&gt; {arr.detect {|e| arr.rindex(e) != arr.index(e)} },\r\n        Cary_set:  -&gt; {find_a_dup_using_set(arr)},\r\n        Cary_diff: -&gt; {find_a_dup_using_difference(arr)}\r\n      )\r\n    end\r\n\r\nI did not include @JjP&#39;s answer because only one duplicate is to be returned, and when his\/her answer is modified to do that it is the same as @Naveed&#39;s earlier answer. Nor did I include @Marin&#39;s answer, which, while posted before @Naveed&#39;s answer, returned all duplicates rather than just one (a minor point but there&#39;s no point evaluating both, as they are identical when return just one duplicate).\r\n\r\nI also modified other answers that returned all duplicates to return just the first one found, but that should have essentially no effect on performance, as they computed all duplicates before selecting one.\r\n\r\nThe results for each benchmark are listed from fastest to slowest:\r\n\r\nFirst suppose the array contains 100 elements:\r\n\r\n    benchmark(100, 0)\r\n    0 duplicates\r\n    Running each test 64 times. Test will take about 2 seconds.\r\n    Cary_set is similar to Cary_diff\r\n    Cary_diff is similar to Ryan\r\n    Ryan is similar to Sergio\r\n    Sergio is faster than Chris by 4x &#177; 1.0\r\n    Chris is faster than Naveed by 2x &#177; 1.0\r\n\r\n    benchmark(100, 1)\r\n    1 duplicates\r\n    Running each test 128 times. Test will take about 2 seconds.\r\n    Cary_set is similar to Cary_diff\r\n    Cary_diff is faster than Ryan by 2x &#177; 1.0\r\n    Ryan is similar to Sergio\r\n    Sergio is faster than Chris by 2x &#177; 1.0\r\n    Chris is faster than Naveed by 2x &#177; 1.0\r\n\r\n    benchmark(100, 10)\r\n    10 duplicates\r\n    Running each test 1024 times. Test will take about 3 seconds.\r\n    Chris is faster than Naveed by 2x &#177; 1.0\r\n    Naveed is faster than Cary_diff by 2x &#177; 1.0 (results differ: AAC vs AAF)\r\n    Cary_diff is similar to Cary_set\r\n    Cary_set is faster than Sergio by 3x &#177; 1.0 (results differ: AAF vs AAC)\r\n    Sergio is similar to Ryan\r\n\r\nNow consider an array with 10,000 elements:\r\n\r\n    benchmark(10000, 0)\r\n    0 duplicates\r\n    Running each test once. Test will take about 4 minutes.\r\n    Ryan is similar to Sergio\r\n    Sergio is similar to Cary_set\r\n    Cary_set is similar to Cary_diff\r\n    Cary_diff is faster than Chris by 400x &#177; 100.0\r\n    Chris is faster than Naveed by 3x &#177; 0.1\r\n\r\n    benchmark(10000, 1)\r\n    1 duplicates\r\n    Running each test once. Test will take about 1 second.\r\n    Cary_set is similar to Cary_diff\r\n    Cary_diff is similar to Sergio\r\n    Sergio is similar to Ryan\r\n    Ryan is faster than Chris by 2x &#177; 1.0\r\n    Chris is faster than Naveed by 2x &#177; 1.0\r\n\r\n    benchmark(10000, 10)\r\n    10 duplicates\r\n    Running each test once. Test will take about 11 seconds.\r\n    Cary_set is similar to Cary_diff\r\n    Cary_diff is faster than Sergio by 3x &#177; 1.0 (results differ: AAE vs AAA)\r\n    Sergio is similar to Ryan\r\n    Ryan is faster than Chris by 20x &#177; 10.0\r\n    Chris is faster than Naveed by 3x &#177; 1.0\r\n\r\n    benchmark(10000, 100)\r\n    100 duplicates\r\n    Cary_set is similar to Cary_diff\r\n    Cary_diff is faster than Sergio by 11x &#177; 10.0 (results differ: ADG vs ACL)\r\n    Sergio is similar to Ryan\r\n    Ryan is similar to Chris\r\n    Chris is faster than Naveed by 3x &#177; 1.0\r\n\r\nNote that `find_a_dup_using_difference(arr)` would be much more efficient if `Array#difference` were implemented in C, which would be the case if it were added to the Ruby core.\r\n\r\n**Conclusion**\r\n\r\nMany of the answers are reasonable but **using a Set is the clear best choice**. It is fastest in the medium-hard cases, joint fastest in the hardest and only in computationally trivial cases - when your choice won&#39;t matter anyway - can it be beaten. \r\n\r\nThe one very special case in which you might pick Chris&#39; solution would be if you want to use the method to separately de-duplicate thousands of small arrays and expect to find a duplicate typically less than 10 items in. This will be a bit faster as it avoids the small additional overhead of creating the Set.","body":"<p>Here are two more ways of finding a duplicate.<\/p>\n\n<p><strong>Use a set<\/strong><\/p>\n\n<pre><code>require 'set'\n\ndef find_a_dup_using_set(arr)\n  s = Set.new\n  arr.find { |e| !s.add?(e) }\nend\n\nfind_a_dup_using_set arr\n  #=&gt; \"hello\" \n<\/code><\/pre>\n\n<p>Use <code>select<\/code> in place of <code>find<\/code> to return an array of all duplicates.<\/p>\n\n<p><strong>Use <code>Array#difference<\/code><\/strong><\/p>\n\n<pre><code>class Array\n  def difference(other)\n    h = other.each_with_object(Hash.new(0)) { |e,h| h[e] += 1 }\n    reject { |e| h[e] &gt; 0 &amp;&amp; h[e] -= 1 }\n  end\nend\n\ndef find_a_dup_using_difference(arr)\n  arr.difference(arr.uniq).first\nend\n\nfind_a_dup_using_difference arr\n  #=&gt; \"hello\" \n<\/code><\/pre>\n\n<p>Drop <code>.first<\/code> to return an array of all duplicates.<\/p>\n\n<p>Both methods return <code>nil<\/code> if there are no duplicates.<\/p>\n\n<p>I <a href=\"https:\/\/bugs.ruby-lang.org\/issues\/11815\" rel=\"noreferrer\">proposed that <code>Array#difference<\/code><\/a> be added to the Ruby core. More information is in my answer <a href=\"https:\/\/stackoverflow.com\/questions\/24987054\/how-to-select-unique-elements\">here<\/a>.<\/p>\n\n<p><strong>Benchmark<\/strong><\/p>\n\n<p>Let's compare suggested methods. First, we need an array for testing:<\/p>\n\n<pre><code>CAPS = ('AAA'..'ZZZ').to_a.first(10_000)\ndef test_array(nelements, ndups)\n  arr = CAPS[0, nelements-ndups]\n  arr = arr.concat(arr[0,ndups]).shuffle\nend\n<\/code><\/pre>\n\n<p>and a method to run the benchmarks for different test arrays:<\/p>\n\n<pre><code>require 'fruity'\n\ndef benchmark(nelements, ndups)\n  arr = test_array nelements, ndups\n  puts \"\\n#{ndups} duplicates\\n\"    \n  compare(\n    Naveed:    -&gt; {arr.detect{|e| arr.count(e) &gt; 1}},\n    Sergio:    -&gt; {(arr.inject(Hash.new(0)) {|h,e| h[e] += 1; h}.find {|k,v| v &gt; 1} ||\n                     [nil]).first },\n    Ryan:      -&gt; {(arr.group_by{|e| e}.find {|k,v| v.size &gt; 1} ||\n                     [nil]).first},\n    Chris:     -&gt; {arr.detect {|e| arr.rindex(e) != arr.index(e)} },\n    Cary_set:  -&gt; {find_a_dup_using_set(arr)},\n    Cary_diff: -&gt; {find_a_dup_using_difference(arr)}\n  )\nend\n<\/code><\/pre>\n\n<p>I did not include @JjP's answer because only one duplicate is to be returned, and when his\/her answer is modified to do that it is the same as @Naveed's earlier answer. Nor did I include @Marin's answer, which, while posted before @Naveed's answer, returned all duplicates rather than just one (a minor point but there's no point evaluating both, as they are identical when return just one duplicate).<\/p>\n\n<p>I also modified other answers that returned all duplicates to return just the first one found, but that should have essentially no effect on performance, as they computed all duplicates before selecting one.<\/p>\n\n<p>The results for each benchmark are listed from fastest to slowest:<\/p>\n\n<p>First suppose the array contains 100 elements:<\/p>\n\n<pre><code>benchmark(100, 0)\n0 duplicates\nRunning each test 64 times. Test will take about 2 seconds.\nCary_set is similar to Cary_diff\nCary_diff is similar to Ryan\nRyan is similar to Sergio\nSergio is faster than Chris by 4x \u00b1 1.0\nChris is faster than Naveed by 2x \u00b1 1.0\n\nbenchmark(100, 1)\n1 duplicates\nRunning each test 128 times. Test will take about 2 seconds.\nCary_set is similar to Cary_diff\nCary_diff is faster than Ryan by 2x \u00b1 1.0\nRyan is similar to Sergio\nSergio is faster than Chris by 2x \u00b1 1.0\nChris is faster than Naveed by 2x \u00b1 1.0\n\nbenchmark(100, 10)\n10 duplicates\nRunning each test 1024 times. Test will take about 3 seconds.\nChris is faster than Naveed by 2x \u00b1 1.0\nNaveed is faster than Cary_diff by 2x \u00b1 1.0 (results differ: AAC vs AAF)\nCary_diff is similar to Cary_set\nCary_set is faster than Sergio by 3x \u00b1 1.0 (results differ: AAF vs AAC)\nSergio is similar to Ryan\n<\/code><\/pre>\n\n<p>Now consider an array with 10,000 elements:<\/p>\n\n<pre><code>benchmark(10000, 0)\n0 duplicates\nRunning each test once. Test will take about 4 minutes.\nRyan is similar to Sergio\nSergio is similar to Cary_set\nCary_set is similar to Cary_diff\nCary_diff is faster than Chris by 400x \u00b1 100.0\nChris is faster than Naveed by 3x \u00b1 0.1\n\nbenchmark(10000, 1)\n1 duplicates\nRunning each test once. Test will take about 1 second.\nCary_set is similar to Cary_diff\nCary_diff is similar to Sergio\nSergio is similar to Ryan\nRyan is faster than Chris by 2x \u00b1 1.0\nChris is faster than Naveed by 2x \u00b1 1.0\n\nbenchmark(10000, 10)\n10 duplicates\nRunning each test once. Test will take about 11 seconds.\nCary_set is similar to Cary_diff\nCary_diff is faster than Sergio by 3x \u00b1 1.0 (results differ: AAE vs AAA)\nSergio is similar to Ryan\nRyan is faster than Chris by 20x \u00b1 10.0\nChris is faster than Naveed by 3x \u00b1 1.0\n\nbenchmark(10000, 100)\n100 duplicates\nCary_set is similar to Cary_diff\nCary_diff is faster than Sergio by 11x \u00b1 10.0 (results differ: ADG vs ACL)\nSergio is similar to Ryan\nRyan is similar to Chris\nChris is faster than Naveed by 3x \u00b1 1.0\n<\/code><\/pre>\n\n<p>Note that <code>find_a_dup_using_difference(arr)<\/code> would be much more efficient if <code>Array#difference<\/code> were implemented in C, which would be the case if it were added to the Ruby core.<\/p>\n\n<p><strong>Conclusion<\/strong><\/p>\n\n<p>Many of the answers are reasonable but <strong>using a Set is the clear best choice<\/strong>. It is fastest in the medium-hard cases, joint fastest in the hardest and only in computationally trivial cases - when your choice won't matter anyway - can it be beaten. <\/p>\n\n<p>The one very special case in which you might pick Chris' solution would be if you want to use the method to separately de-duplicate thousands of small arrays and expect to find a duplicate typically less than 10 items in. This will be a bit faster as it avoids the small additional overhead of creating the Set.<\/p>\n","last_edit_date":1547062205.0,"community_owned_date":null},{"owner":{"account_id":31143,"reputation":20500,"user_id":85309,"user_type":"registered","accept_rate":93,"profile_image":"https:\/\/www.gravatar.com\/avatar\/9dda75d7ad467bf2a22de8a9d695a2dd?s=256&d=identicon&r=PG","display_name":"Topher Fangio","link":"https:\/\/stackoverflow.com\/users\/85309\/topher-fangio"},"is_accepted":false,"score":31,"last_activity_date":1540889391,"creation_date":1257436845,"answer_id":1681525,"question_id":1681467,"content_license":"CC BY-SA 4.0","body_markdown":"I would **highly** suggest using [RDoc][1]. It is pretty much the standard. It is easy to read the code comments, and it allows you to easily create web-based documentation for your project.\r\n\r\n\r\n  [1]: https:\/\/github.com\/ruby\/rdoc","body":"<p>I would <strong>highly<\/strong> suggest using <a href=\"https:\/\/github.com\/ruby\/rdoc\" rel=\"noreferrer\">RDoc<\/a>. It is pretty much the standard. It is easy to read the code comments, and it allows you to easily create web-based documentation for your project.<\/p>\n","last_edit_date":1540889391.0,"community_owned_date":null},{"owner":{"account_id":21006,"reputation":235023,"user_id":50742,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/03cdad7329f1a13d2b2f3d9c8a08813d?s=256&d=identicon&r=PG","display_name":"Chuck","link":"https:\/\/stackoverflow.com\/users\/50742\/chuck"},"is_accepted":false,"score":31,"last_activity_date":1370119107,"creation_date":1288130193,"answer_id":4028368,"question_id":4028329,"content_license":"CC BY-SA 3.0","body_markdown":"Just use `Hash.[]` with the values in the array. For example:\r\n\r\n    arr = [1,2,3,4]\r\n    Hash[*arr] #=&gt; gives {1 =&gt; 2, 3 =&gt; 4}","body":"<p>Just use <code>Hash.[]<\/code> with the values in the array. For example:<\/p>\n\n<pre><code>arr = [1,2,3,4]\nHash[*arr] #=&gt; gives {1 =&gt; 2, 3 =&gt; 4}\n<\/code><\/pre>\n","last_edit_date":1370119107.0,"community_owned_date":null},{"owner":{"account_id":108333,"reputation":1161,"user_id":287604,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/44ea1deb981fbaf4922c8f7851e767cb?s=256&d=identicon&r=PG","display_name":"Thiago Ganzarolli","link":"https:\/\/stackoverflow.com\/users\/287604\/thiago-ganzarolli"},"is_accepted":false,"score":31,"last_activity_date":1348857622,"creation_date":1329203278,"answer_id":9272999,"question_id":8095209,"content_license":"CC BY-SA 3.0","body_markdown":"A slighest different version, skipping the cut step, taking advantage of the &#39;--no-version&#39; option:\r\n\r\n    gem list --no-version |xargs gem uninstall -ax\r\n\r\nSince you are removing everything, I don&#39;t see the need for the &#39;I&#39; option. Whenever the gem is removed, it&#39;s fine.","body":"<p>A slighest different version, skipping the cut step, taking advantage of the '--no-version' option:<\/p>\n\n<pre><code>gem list --no-version |xargs gem uninstall -ax\n<\/code><\/pre>\n\n<p>Since you are removing everything, I don't see the need for the 'I' option. Whenever the gem is removed, it's fine.<\/p>\n","last_edit_date":1348857622.0,"community_owned_date":null},{"owner":{"account_id":116382,"reputation":45198,"user_id":305189,"user_type":"registered","accept_rate":81,"profile_image":"https:\/\/www.gravatar.com\/avatar\/5852a22acde289c6c087f5de514d99fb?s=256&d=identicon&r=PG","display_name":"Pierre de LESPINAY","link":"https:\/\/stackoverflow.com\/users\/305189\/pierre-de-lespinay"},"is_accepted":false,"score":31,"last_activity_date":1358329449,"creation_date":1358329449,"answer_id":14355348,"question_id":14355165,"content_license":"CC BY-SA 3.0","body_markdown":"I had to wait at least 5 minutes before:\r\n\r\n&gt; Building native extensions.  This could take a while...\r\n\r\nAppears","body":"<p>I had to wait at least 5 minutes before:<\/p>\n\n<blockquote>\n  <p>Building native extensions.  This could take a while...<\/p>\n<\/blockquote>\n\n<p>Appears<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":214466,"reputation":5293,"user_id":468459,"user_type":"registered","accept_rate":75,"profile_image":"https:\/\/www.gravatar.com\/avatar\/e3e80ab2ace6e347ff9293e697de0af3?s=256&d=identicon&r=PG","display_name":"bioneuralnet","link":"https:\/\/stackoverflow.com\/users\/468459\/bioneuralnet"},"is_accepted":false,"score":31,"last_activity_date":1364934209,"creation_date":1364934209,"answer_id":15773657,"question_id":15773552,"content_license":"CC BY-SA 3.0","body_markdown":"I believe the main (only?) different is inheritance:\r\n\r\n    class T &lt; S\r\n    end\r\n\r\n    p T.k\r\n    =&gt; 23\r\n\r\n    S.k = 24\r\n    p T.k\r\n    =&gt; 24\r\n\r\n    p T.s\r\n    =&gt; nil\r\n\r\nClass variables are shared by all &quot;class instances&quot; (i.e. subclasses), whereas class instance variables are specific to only that class. But if you never intend to extend your class, the difference is purely academic.","body":"<p>I believe the main (only?) different is inheritance:<\/p>\n\n<pre><code>class T &lt; S\nend\n\np T.k\n=&gt; 23\n\nS.k = 24\np T.k\n=&gt; 24\n\np T.s\n=&gt; nil\n<\/code><\/pre>\n\n<p>Class variables are shared by all \"class instances\" (i.e. subclasses), whereas class instance variables are specific to only that class. But if you never intend to extend your class, the difference is purely academic.<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":321582,"reputation":1087,"user_id":640483,"user_type":"registered","accept_rate":67,"profile_image":"https:\/\/www.gravatar.com\/avatar\/ecd5cc001ab91998b02f1ace8a35a9da?s=256&d=identicon&r=PG","display_name":"Ryan Her","link":"https:\/\/stackoverflow.com\/users\/640483\/ryan-her"},"is_accepted":false,"score":30,"last_activity_date":1310676316,"creation_date":1310676316,"answer_id":6699697,"question_id":6698207,"content_license":"CC BY-SA 3.0","body_markdown":"delete_all is a single SQL DELETE statement and nothing more. destroy_all calls destroy() on all matching results of :conditions (if you have one) which could be at least NUM_OF_RESULTS SQL statements.  \r\n\r\nIf you have to do something drastic such as destroy_all() on large dataset, I would probably not do it from the app and handle it manually with care.  If the dataset is small enough, you wouldn&#39;t hurt as much.   ","body":"<p>delete_all is a single SQL DELETE statement and nothing more. destroy_all calls destroy() on all matching results of :conditions (if you have one) which could be at least NUM_OF_RESULTS SQL statements.  <\/p>\n\n<p>If you have to do something drastic such as destroy_all() on large dataset, I would probably not do it from the app and handle it manually with care.  If the dataset is small enough, you wouldn't hurt as much.   <\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":18556,"reputation":58329,"user_id":42595,"user_type":"registered","accept_rate":91,"profile_image":"https:\/\/www.gravatar.com\/avatar\/c2c80ca839f681e7c68aba9706bb4700?s=256&d=identicon&r=PG&f=y&so-version=2","display_name":"Ethan","link":"https:\/\/stackoverflow.com\/users\/42595\/ethan"},"is_accepted":false,"score":29,"last_activity_date":1228247223,"creation_date":1228247223,"answer_id":335191,"question_id":224379,"content_license":"CC BY-SA 2.5","body_markdown":"`__FILE__` is the filename with extension of the file containing the code being executed.\r\n\r\nIn `foo.rb`, `__FILE__` would be &quot;foo.rb&quot;.\r\n\r\nIf `foo.rb` were in the dir `\/home\/josh` then `File.dirname(__FILE__)` would return `\/home\/josh`.","body":"<p><code>__FILE__<\/code> is the filename with extension of the file containing the code being executed.<\/p>\n\n<p>In <code>foo.rb<\/code>, <code>__FILE__<\/code> would be \"foo.rb\".<\/p>\n\n<p>If <code>foo.rb<\/code> were in the dir <code>\/home\/josh<\/code> then <code>File.dirname(__FILE__)<\/code> would return <code>\/home\/josh<\/code>.<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":7586327,"reputation":4006,"user_id":8845218,"user_type":"registered","accept_rate":50,"profile_image":"https:\/\/i.stack.imgur.com\/xbjfL.jpg?s=256&g=1","display_name":"Dmitry S.","link":"https:\/\/stackoverflow.com\/users\/8845218\/dmitry-s"},"is_accepted":false,"score":29,"last_activity_date":1556215801,"creation_date":1556215801,"answer_id":55855318,"question_id":13767725,"content_license":"CC BY-SA 4.0","body_markdown":"For WSL (Windows Subsystem for Linux) you need install `build-essential` package:\r\n\r\n    sudo apt install build-essential","body":"<p>For WSL (Windows Subsystem for Linux) you need install <code>build-essential<\/code> package:<\/p>\n\n<pre><code>sudo apt install build-essential\n<\/code><\/pre>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":11939,"reputation":83263,"user_id":1103052,"user_type":"registered","accept_rate":88,"profile_image":"https:\/\/www.gravatar.com\/avatar\/393d9d6acd3ba4ed8ea921dd997d9144?s=256&d=identicon&r=PG","display_name":"Mark A. Nicolosi","link":"https:\/\/stackoverflow.com\/users\/1103052\/mark-a-nicolosi"},"is_accepted":false,"score":28,"last_activity_date":1223943698,"creation_date":1223943698,"answer_id":199550,"question_id":199527,"content_license":"CC BY-SA 2.5","body_markdown":"From http:\/\/snippets.dzone.com\/posts\/show\/2785:\r\n\r\n    module Kernel\r\n    private\r\n        def this_method_name\r\n          caller[0] =~ \/`([^&#39;]*)&#39;\/ and $1\r\n        end\r\n    end\r\n    \r\n    class Foo\r\n      def test_method\r\n        this_method_name\r\n      end\r\n    end\r\n    \r\n    puts Foo.new.test_method    # =&gt; test_method\r\n\r\n","body":"<p>From <a href=\"http:\/\/snippets.dzone.com\/posts\/show\/2785\" rel=\"noreferrer\">http:\/\/snippets.dzone.com\/posts\/show\/2785<\/a>:<\/p>\n\n<pre><code>module Kernel\nprivate\n    def this_method_name\n      caller[0] =~ \/`([^']*)'\/ and $1\n    end\nend\n\nclass Foo\n  def test_method\n    this_method_name\n  end\nend\n\nputs Foo.new.test_method    # =&gt; test_method\n<\/code><\/pre>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":24712,"reputation":65615,"user_id":63034,"user_type":"registered","accept_rate":57,"profile_image":"https:\/\/i.stack.imgur.com\/ZXKMO.jpg?s=256&g=1","display_name":"mikej","link":"https:\/\/stackoverflow.com\/users\/63034\/mikej"},"is_accepted":false,"score":28,"last_activity_date":1284553840,"creation_date":1284553840,"answer_id":3717577,"question_id":3717519,"content_license":"CC BY-SA 2.5","body_markdown":"From a [posting by Matz][1]:\r\n\r\n&gt; (1) ++ and -- are NOT reserved\r\n&gt; operator in Ruby.\r\n&gt; \r\n&gt;   (2) C&#39;s increment\/decrement\r\n&gt; operators are in fact hidden\r\n&gt; assignment.\r\n&gt;       They affect variables, not objects.  You cannot accomplish\r\n&gt;       assignment via method.  Ruby uses +=\/-= operator instead.\r\n&gt; \r\n&gt;   (3) self cannot be a target of\r\n&gt; assignment.  In addition, altering\r\n&gt;       the value of integer 1 might cause severe confusion throughout\r\n&gt;       the program.\r\n&gt; \r\n&gt; \t\t\t\t\t\t\tmatz.\r\n\r\n\r\n  [1]: http:\/\/blade.nagaokaut.ac.jp\/cgi-bin\/scat.rb\/ruby\/ruby-talk\/2710","body":"<p>From a <a href=\"http:\/\/blade.nagaokaut.ac.jp\/cgi-bin\/scat.rb\/ruby\/ruby-talk\/2710\" rel=\"noreferrer\">posting by Matz<\/a>:<\/p>\n\n<blockquote>\n  <p>(1) ++ and -- are NOT reserved\n  operator in Ruby.<\/p>\n  \n  <p>(2) C's increment\/decrement\n  operators are in fact hidden\n  assignment.\n        They affect variables, not objects.  You cannot accomplish\n        assignment via method.  Ruby uses +=\/-= operator instead.<\/p>\n  \n  <p>(3) self cannot be a target of\n  assignment.  In addition, altering\n        the value of integer 1 might cause severe confusion throughout\n        the program.<\/p>\n\n<pre><code>                      matz.\n<\/code><\/pre>\n<\/blockquote>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":552826,"reputation":93520,"user_id":916657,"user_type":"registered","accept_rate":95,"profile_image":"https:\/\/www.gravatar.com\/avatar\/75bf31b48e75eedfebaa411a76a85155?s=256&d=identicon&r=PG","display_name":"Niklas B.","link":"https:\/\/stackoverflow.com\/users\/916657\/niklas-b"},"is_accepted":false,"score":28,"last_activity_date":1330971604,"creation_date":1330971604,"answer_id":9571793,"question_id":9571768,"content_license":"CC BY-SA 3.0","body_markdown":"It&#39;s as simple as:\r\n\r\n    irb(main):001:0&gt; hash = {:item1 =&gt; 1}\r\n    =&gt; {:item1=&gt;1}\r\n    irb(main):002:0&gt; hash[:item2] = 2\r\n    =&gt; 2\r\n    irb(main):003:0&gt; hash\r\n    =&gt; {:item1=&gt;1, :item2=&gt;2}","body":"<p>It's as simple as:<\/p>\n\n<pre><code>irb(main):001:0&gt; hash = {:item1 =&gt; 1}\n=&gt; {:item1=&gt;1}\nirb(main):002:0&gt; hash[:item2] = 2\n=&gt; 2\nirb(main):003:0&gt; hash\n=&gt; {:item1=&gt;1, :item2=&gt;2}\n<\/code><\/pre>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":119893,"reputation":14933,"user_id":311941,"user_type":"registered","accept_rate":75,"profile_image":"https:\/\/www.gravatar.com\/avatar\/2bddc871970b42c4666972d26babe0ce?s=256&d=identicon&r=PG","display_name":"edgerunner","link":"https:\/\/stackoverflow.com\/users\/311941\/edgerunner"},"is_accepted":false,"score":28,"last_activity_date":1354387778,"creation_date":1354387778,"answer_id":13662576,"question_id":5189161,"content_license":"CC BY-SA 3.0","body_markdown":"A bit more readable one, `map` it to an array of single-element hashes and `reduce` that with `merge`\r\n\r\n    the_hash.map{ |key,value| {key =&gt; &quot;%#{value}%&quot;} }.reduce(:merge)","body":"<p>A bit more readable one, <code>map<\/code> it to an array of single-element hashes and <code>reduce<\/code> that with <code>merge<\/code><\/p>\n\n<pre><code>the_hash.map{ |key,value| {key =&gt; \"%#{value}%\"} }.reduce(:merge)\n<\/code><\/pre>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":225408,"reputation":11100,"user_id":485864,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/f34b46a9a4723bdbc6e1fdcf71b08517?s=256&d=identicon&r=PG","display_name":"vgoff","link":"https:\/\/stackoverflow.com\/users\/485864\/vgoff"},"is_accepted":false,"score":27,"last_activity_date":1532220505,"creation_date":1355499141,"answer_id":13881657,"question_id":1681467,"content_license":"CC BY-SA 4.0","body_markdown":"I would suggest getting to know RDoc as is stated.  But don&#39;t ignore the very popular [YARD A Ruby Document](https:\/\/yardoc.org\/) tool, as well.  A lot of the documentation you will see online for Ruby uses Yard.  RVM knows Yard and uses it for generating your documentation on your machine if it is available.\r\n\r\nRDoc would still be required, as Yard uses it.\r\n\r\n","body":"<p>I would suggest getting to know RDoc as is stated.  But don't ignore the very popular <a href=\"https:\/\/yardoc.org\/\" rel=\"noreferrer\">YARD A Ruby Document<\/a> tool, as well.  A lot of the documentation you will see online for Ruby uses Yard.  RVM knows Yard and uses it for generating your documentation on your machine if it is available.<\/p>\n\n<p>RDoc would still be required, as Yard uses it.<\/p>\n","last_edit_date":1532220505.0,"community_owned_date":null},{"owner":{"account_id":236983,"reputation":12184,"user_id":504845,"user_type":"registered","accept_rate":67,"profile_image":"https:\/\/www.gravatar.com\/avatar\/cfd7e02060bfb5c9bb36f956949623f6?s=256&d=identicon&r=PG","display_name":"Nowaker","link":"https:\/\/stackoverflow.com\/users\/504845\/nowaker"},"is_accepted":false,"score":27,"last_activity_date":1408848399,"creation_date":1408848399,"answer_id":25468094,"question_id":17936340,"content_license":"CC BY-SA 3.0","body_markdown":"Use Bundler. Call `bundle exec guard`, not `guard`.","body":"<p>Use Bundler. Call <code>bundle exec guard<\/code>, not <code>guard<\/code>.<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":1747174,"reputation":3768,"user_id":1597076,"user_type":"registered","accept_rate":76,"profile_image":"https:\/\/i.stack.imgur.com\/9EGeb.jpg?s=256&g=1","display_name":"Sumit Munot","link":"https:\/\/stackoverflow.com\/users\/1597076\/sumit-munot"},"is_accepted":false,"score":27,"last_activity_date":1623499643,"creation_date":1430789845,"answer_id":30042879,"question_id":23963018,"content_license":"CC BY-SA 4.0","body_markdown":"The error is due to rvm is not running as in login shell. Hence try the below command:\r\n\r\n    \/bin\/bash --login\r\n\r\nYou will able run rvm commands instantly as login shell in terminal. \r\n","body":"<p>The error is due to rvm is not running as in login shell. Hence try the below command:<\/p>\n<pre><code>\/bin\/bash --login\n<\/code><\/pre>\n<p>You will able run rvm commands instantly as login shell in terminal.<\/p>\n","last_edit_date":1623499643.0,"community_owned_date":null},{"owner":{"account_id":5123991,"reputation":526,"user_id":4106733,"user_type":"registered","profile_image":"https:\/\/lh6.googleusercontent.com\/-K0cM7kCnqoA\/AAAAAAAAAAI\/AAAAAAAAAE0\/hzYOT-XHiI4\/photo.jpg?sz=256","display_name":"Kanat Bolazar","link":"https:\/\/stackoverflow.com\/users\/4106733\/kanat-bolazar"},"is_accepted":false,"score":27,"last_activity_date":1446142605,"creation_date":1446079682,"answer_id":33404138,"question_id":4822422,"content_license":"CC BY-SA 3.0","body_markdown":"If anyone is interested, here are some one-liners (and a note on loss of type information in CSV):\r\n\r\n    require &#39;csv&#39;\r\n    \r\n    rows = [[1,2,3],[4,5]]                    # [[1, 2, 3], [4, 5]]\r\n    \r\n    # To CSV string\r\n    csv = rows.map(&amp;:to_csv).join             # &quot;1,2,3\\n4,5\\n&quot;\r\n    \r\n    # ... and back, as String[][]\r\n    rows2 = csv.split(&quot;\\n&quot;).map(&amp;:parse_csv)  # [[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;], [&quot;4&quot;, &quot;5&quot;]]\r\n    \r\n    # File I\/O:\r\n    filename = &#39;\/tmp\/vsc.csv&#39;\r\n    \r\n    # Save to file -- answer to your question\r\n    IO.write(filename, rows.map(&amp;:to_csv).join)\r\n    \r\n    # Read from file\r\n    # rows3 = IO.read(filename).split(&quot;\\n&quot;).map(&amp;:parse_csv)\r\n    rows3 = CSV.read(filename)\r\n    \r\n    rows3 == rows2   # true\r\n    rows3 == rows    # false\r\nNote: CSV loses all type information, you can use JSON to preserve basic type information, or go to verbose (but more easily human-editable) YAML to preserve all type information -- for example, if you need date type, which would become strings in CSV &amp; JSON.\r\n\r\n","body":"<p>If anyone is interested, here are some one-liners (and a note on loss of type information in CSV):<\/p>\n\n<pre><code>require 'csv'\n\nrows = [[1,2,3],[4,5]]                    # [[1, 2, 3], [4, 5]]\n\n# To CSV string\ncsv = rows.map(&amp;:to_csv).join             # \"1,2,3\\n4,5\\n\"\n\n# ... and back, as String[][]\nrows2 = csv.split(\"\\n\").map(&amp;:parse_csv)  # [[\"1\", \"2\", \"3\"], [\"4\", \"5\"]]\n\n# File I\/O:\nfilename = '\/tmp\/vsc.csv'\n\n# Save to file -- answer to your question\nIO.write(filename, rows.map(&amp;:to_csv).join)\n\n# Read from file\n# rows3 = IO.read(filename).split(\"\\n\").map(&amp;:parse_csv)\nrows3 = CSV.read(filename)\n\nrows3 == rows2   # true\nrows3 == rows    # false\n<\/code><\/pre>\n\n<p>Note: CSV loses all type information, you can use JSON to preserve basic type information, or go to verbose (but more easily human-editable) YAML to preserve all type information -- for example, if you need date type, which would become strings in CSV &amp; JSON.<\/p>\n","last_edit_date":1446142605.0,"community_owned_date":null},{"owner":{"account_id":1152810,"reputation":4662,"user_id":5946118,"user_type":"registered","accept_rate":53,"profile_image":"https:\/\/i.stack.imgur.com\/CbjEl.jpg?s=256&g=1","display_name":"Rajkaran Mishra","link":"https:\/\/stackoverflow.com\/users\/5946118\/rajkaran-mishra"},"is_accepted":false,"score":27,"last_activity_date":1533563112,"creation_date":1533563112,"answer_id":51709124,"question_id":1740046,"content_license":"CC BY-SA 4.0","body_markdown":"There are only two main differences.\r\n\r\n - First, a `lambda` checks the number of arguments passed to it, while a `proc` does not. This means that a `lambda` will throw an error if you pass it the wrong number of arguments, whereas a `proc` will ignore unexpected arguments and assign `nil` to any that are missing.\r\n - Second, when a `lambda` returns, it passes control back to the calling method; when a `proc` returns, it does so immediately, without going back to the calling method.\r\n\r\nTo see how this works, take a look at the code below. Our first method calls a `proc`; the second calls a `lambda`.\r\n\r\n    def batman_ironman_proc\r\n      victor = Proc.new { return &quot;Batman will win!&quot; }\r\n      victor.call\r\n      &quot;Iron Man will win!&quot;\r\n    end\r\n    \r\n    puts batman_ironman_proc # prints &quot;Batman will win!&quot;\r\n    \r\n    def batman_ironman_lambda\r\n      victor = lambda { return &quot;Batman will win!&quot; }\r\n      victor.call\r\n      &quot;Iron Man will win!&quot;\r\n    end\r\n    \r\n    puts batman_ironman_lambda # prints &quot;Iron Man will win!&quot;\r\n\r\nSee how the `proc` says &quot;Batman will win!&quot;, this is because it returns immediately, without going back to the batman_ironman_proc method.\r\n\r\nOur `lambda`, however, goes back into the method after being called, so the method returns the last code it evaluates: &quot;Iron Man will win!&quot;\r\n","body":"<p>There are only two main differences.<\/p>\n\n<ul>\n<li>First, a <code>lambda<\/code> checks the number of arguments passed to it, while a <code>proc<\/code> does not. This means that a <code>lambda<\/code> will throw an error if you pass it the wrong number of arguments, whereas a <code>proc<\/code> will ignore unexpected arguments and assign <code>nil<\/code> to any that are missing.<\/li>\n<li>Second, when a <code>lambda<\/code> returns, it passes control back to the calling method; when a <code>proc<\/code> returns, it does so immediately, without going back to the calling method.<\/li>\n<\/ul>\n\n<p>To see how this works, take a look at the code below. Our first method calls a <code>proc<\/code>; the second calls a <code>lambda<\/code>.<\/p>\n\n<pre><code>def batman_ironman_proc\n  victor = Proc.new { return \"Batman will win!\" }\n  victor.call\n  \"Iron Man will win!\"\nend\n\nputs batman_ironman_proc # prints \"Batman will win!\"\n\ndef batman_ironman_lambda\n  victor = lambda { return \"Batman will win!\" }\n  victor.call\n  \"Iron Man will win!\"\nend\n\nputs batman_ironman_lambda # prints \"Iron Man will win!\"\n<\/code><\/pre>\n\n<p>See how the <code>proc<\/code> says \"Batman will win!\", this is because it returns immediately, without going back to the batman_ironman_proc method.<\/p>\n\n<p>Our <code>lambda<\/code>, however, goes back into the method after being called, so the method returns the last code it evaluates: \"Iron Man will win!\"<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":9169,"reputation":2948,"user_id":16829,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/634c7a5c6e7c5e50b431632c7d3b2d92?s=256&d=identicon&r=PG","display_name":"Raimonds Simanovskis","link":"https:\/\/stackoverflow.com\/users\/16829\/raimonds-simanovskis"},"is_accepted":false,"score":26,"last_activity_date":1227741509,"creation_date":1227741509,"answer_id":322505,"question_id":322470,"content_license":"CC BY-SA 2.5","body_markdown":"If you want to call these methods without including module in another class then you need to define them as module methods:\r\n\r\n    module UsefulThings\r\n      def self.get_file; ...\r\n      def self.delete_file; ...\r\n\r\n      def self.format_text(x); ...\r\n    end\r\n\r\nand then you can call them with\r\n\r\n    UsefulThings.format_text(&quot;xxx&quot;)\r\n\r\nor\r\n\r\n    UsefulThings::format_text(&quot;xxx&quot;)\r\n\r\nBut anyway I would recommend that you put just related methods in one module or in one class. If you have problem that you want to include just one method from module then it sounds like a bad code smell and it is not good Ruby style to put unrelated methods together.\r\n\r\n","body":"<p>If you want to call these methods without including module in another class then you need to define them as module methods:<\/p>\n\n<pre><code>module UsefulThings\n  def self.get_file; ...\n  def self.delete_file; ...\n\n  def self.format_text(x); ...\nend\n<\/code><\/pre>\n\n<p>and then you can call them with<\/p>\n\n<pre><code>UsefulThings.format_text(\"xxx\")\n<\/code><\/pre>\n\n<p>or<\/p>\n\n<pre><code>UsefulThings::format_text(\"xxx\")\n<\/code><\/pre>\n\n<p>But anyway I would recommend that you put just related methods in one module or in one class. If you have problem that you want to include just one method from module then it sounds like a bad code smell and it is not good Ruby style to put unrelated methods together.<\/p>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":198134,"reputation":1011,"user_id":442627,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/cb66cc44756ce04e589b8190a9578b6a?s=256&d=identicon&r=PG&f=y&so-version=2","display_name":"Developer","link":"https:\/\/stackoverflow.com\/users\/442627\/developer"},"is_accepted":false,"score":26,"last_activity_date":1441832830,"creation_date":1283963051,"answer_id":3669828,"question_id":420352,"content_license":"CC BY-SA 3.0","body_markdown":"Solution is here:\r\n\r\n    SomeModel.last(5).reverse\r\nSince rails is lazy, it will eventually hit the database with SQL like: &quot;SELECT  `table`.* FROM `table`  ORDER BY `table`.`id` DESC LIMIT 5&quot;.","body":"<p>Solution is here:<\/p>\n\n<pre><code>SomeModel.last(5).reverse\n<\/code><\/pre>\n\n<p>Since rails is lazy, it will eventually hit the database with SQL like: \"SELECT  <code>table<\/code>.* FROM <code>table<\/code>  ORDER BY <code>table<\/code>.<code>id<\/code> DESC LIMIT 5\".<\/p>\n","last_edit_date":1441832830.0,"community_owned_date":null},{"owner":{"account_id":177944,"reputation":11772,"user_id":409617,"user_type":"registered","accept_rate":61,"profile_image":"https:\/\/i.stack.imgur.com\/fQkEw.jpg?s=256&g=1","display_name":"Mr. Black","link":"https:\/\/stackoverflow.com\/users\/409617\/mr-black"},"is_accepted":false,"score":26,"last_activity_date":1629673223,"creation_date":1341915501,"answer_id":11411200,"question_id":9524457,"content_license":"CC BY-SA 4.0","body_markdown":"Source: http:\/\/rubydoc.info\/gems\/extlib\/0.9.15\/String#camel_case-instance_method\r\n\r\nFor learning purposes:\r\n\r\n    class String\r\n      def camel_case\r\n        return self if self !~ \/_\/ &amp;&amp; self =~ \/[A-Z]+.*\/\r\n        split(&#39;_&#39;).map{|e| e.capitalize}.join\r\n      end\r\n    end\r\n\r\n    &quot;foo_bar&quot;.camel_case          #=&gt; &quot;FooBar&quot;\r\n\r\nAnd for the lowerCase variant:\r\n\r\n    class String\r\n      def camel_case_lower\r\n        self.split(&#39;_&#39;).inject([]){ |buffer,e| buffer.push(buffer.empty? ? e : e.capitalize) }.join\r\n      end\r\n    end\r\n\r\n    &quot;foo_bar&quot;.camel_case_lower          #=&gt; &quot;fooBar&quot;\r\n","body":"<p>Source: <a href=\"http:\/\/rubydoc.info\/gems\/extlib\/0.9.15\/String#camel_case-instance_method\" rel=\"nofollow noreferrer\">http:\/\/rubydoc.info\/gems\/extlib\/0.9.15\/String#camel_case-instance_method<\/a><\/p>\n<p>For learning purposes:<\/p>\n<pre><code>class String\n  def camel_case\n    return self if self !~ \/_\/ &amp;&amp; self =~ \/[A-Z]+.*\/\n    split('_').map{|e| e.capitalize}.join\n  end\nend\n\n&quot;foo_bar&quot;.camel_case          #=&gt; &quot;FooBar&quot;\n<\/code><\/pre>\n<p>And for the lowerCase variant:<\/p>\n<pre><code>class String\n  def camel_case_lower\n    self.split('_').inject([]){ |buffer,e| buffer.push(buffer.empty? ? e : e.capitalize) }.join\n  end\nend\n\n&quot;foo_bar&quot;.camel_case_lower          #=&gt; &quot;fooBar&quot;\n<\/code><\/pre>\n","last_edit_date":1629673223.0,"community_owned_date":null},{"owner":{"account_id":141468,"reputation":2793,"user_id":348508,"user_type":"registered","accept_rate":82,"profile_image":"https:\/\/i.stack.imgur.com\/4yIVh.png?s=256&g=1","display_name":"Erik Escobedo","link":"https:\/\/stackoverflow.com\/users\/348508\/erik-escobedo"},"is_accepted":false,"score":26,"last_activity_date":1355208121,"creation_date":1355208121,"answer_id":13814957,"question_id":4028329,"content_license":"CC BY-SA 3.0","body_markdown":"Or if you have an array of `[key, value]` arrays, you can do:\r\n\r\n    [[1, 2], [3, 4]].inject({}) do |r, s|\r\n      r.merge!({s[0] =&gt; s[1]})\r\n    end # =&gt; { 1 =&gt; 2, 3 =&gt; 4 }","body":"<p>Or if you have an array of <code>[key, value]<\/code> arrays, you can do:<\/p>\n\n<pre><code>[[1, 2], [3, 4]].inject({}) do |r, s|\n  r.merge!({s[0] =&gt; s[1]})\nend # =&gt; { 1 =&gt; 2, 3 =&gt; 4 }\n<\/code><\/pre>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":5368528,"reputation":953,"user_id":4277684,"user_type":"registered","profile_image":"https:\/\/lh6.googleusercontent.com\/-5QBf6mSfvTg\/AAAAAAAAAAI\/AAAAAAAAA6E\/9nrjP0MDeD8\/photo.jpg?sz=256","display_name":"Ashish Pani","link":"https:\/\/stackoverflow.com\/users\/4277684\/ashish-pani"},"is_accepted":false,"score":26,"last_activity_date":1602143281,"creation_date":1602143281,"answer_id":64258015,"question_id":27041885,"content_license":"CC BY-SA 4.0","body_markdown":"On Mac OSX 10.15,\r\nEven after installing gpg, i was getting gpg2 command not found \r\n\r\n    $ brew install gnupg gnupg2\r\n    Warning: gnupg 2.2.23 is already installed and up-to-date\r\n    To reinstall 2.2.23, run `brew reinstall gnupg`\r\n    \r\n    $ gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB\r\n    -bash: gpg2: command not found\r\n\r\nInstead, this worked for me\r\n\r\n    $ gpg --keyserver hkp:\/\/pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB\r\n","body":"<p>On Mac OSX 10.15,\nEven after installing gpg, i was getting gpg2 command not found<\/p>\n<pre><code>$ brew install gnupg gnupg2\nWarning: gnupg 2.2.23 is already installed and up-to-date\nTo reinstall 2.2.23, run `brew reinstall gnupg`\n\n$ gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB\n-bash: gpg2: command not found\n<\/code><\/pre>\n<p>Instead, this worked for me<\/p>\n<pre><code>$ gpg --keyserver hkp:\/\/pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB\n<\/code><\/pre>\n","last_edit_date":null,"community_owned_date":null},{"owner":{"account_id":256326,"reputation":9414,"user_id":536984,"user_type":"registered","accept_rate":75,"profile_image":"https:\/\/www.gravatar.com\/avatar\/535fad4c1bfbed6f16123ca4ada8b048?s=256&d=identicon&r=PG","display_name":"Orlando","link":"https:\/\/stackoverflow.com\/users\/536984\/orlando"},"is_accepted":false,"score":25,"last_activity_date":1364225798,"creation_date":1323461028,"answer_id":8451082,"question_id":5629402,"content_license":"CC BY-SA 3.0","body_markdown":"use blank? http:\/\/api.rubyonrails.org\/classes\/Object.html#method-i-blank-3F\r\n\r\n    unless params[:one].blank? &amp;&amp; params[:two].blank?\r\n\r\nwill return true if its empty or nil\r\n\r\nalso... that will not work if you are testing boolean values.. since\r\n\r\n    &gt;&gt; false.blank?\r\n    =&gt; true\r\n\r\nin that case you could use\r\n\r\n    unless params[:one].to_s.blank? &amp;&amp; params[:two].to_s.blank?","body":"<p>use blank? <a href=\"http:\/\/api.rubyonrails.org\/classes\/Object.html#method-i-blank-3F\" rel=\"noreferrer\">http:\/\/api.rubyonrails.org\/classes\/Object.html#method-i-blank-3F<\/a><\/p>\n\n<pre><code>unless params[:one].blank? &amp;&amp; params[:two].blank?\n<\/code><\/pre>\n\n<p>will return true if its empty or nil<\/p>\n\n<p>also... that will not work if you are testing boolean values.. since<\/p>\n\n<pre><code>&gt;&gt; false.blank?\n=&gt; true\n<\/code><\/pre>\n\n<p>in that case you could use<\/p>\n\n<pre><code>unless params[:one].to_s.blank? &amp;&amp; params[:two].to_s.blank?\n<\/code><\/pre>\n","last_edit_date":1364225798.0,"community_owned_date":null},{"owner":{"account_id":134076,"reputation":889,"user_id":1323136,"user_type":"registered","accept_rate":24,"profile_image":"https:\/\/www.gravatar.com\/avatar\/507dedd5f7cffcced6fb38439487144e?s=256&d=identicon&r=PG","display_name":"user1323136","link":"https:\/\/stackoverflow.com\/users\/1323136\/user1323136"},"is_accepted":false,"score":25,"last_activity_date":1519820492,"creation_date":1351810147,"answer_id":13186696,"question_id":116593,"content_license":"CC BY-SA 3.0","body_markdown":"&lt;kbd&gt;Command&lt;\/kbd&gt; + &lt;kbd&gt;K&lt;\/kbd&gt; in *macOS* works great.","body":"<p><kbd>Command<\/kbd> + <kbd>K<\/kbd> in <em>macOS<\/em> works great.<\/p>\n","last_edit_date":1519820492.0,"community_owned_date":null}]